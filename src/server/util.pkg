/* $Id$ */
$#include "angband.h"

typedef char* cptr;
typedef int errr;
typedef unsigned char bool;
typedef unsigned char byte;
typedef signed short s16b;
typedef unsigned short u16b;
typedef signed int s32b;
typedef unsigned int u32b;

#define TRUE
#define FALSE

#define TERM_DARK                0  /* 'd' */   /* 0,0,0 */
#define TERM_WHITE               1  /* 'w' */   /* 4,4,4 */
#define TERM_SLATE               2  /* 's' */   /* 2,2,2 */
#define TERM_ORANGE              3  /* 'o' */   /* 4,2,0 */
#define TERM_RED                 4  /* 'r' */   /* 3,0,0 */
#define TERM_GREEN               5  /* 'g' */   /* 0,2,1 */
#define TERM_BLUE                6  /* 'b' */   /* 0,0,4 */
#define TERM_UMBER               7  /* 'u' */   /* 2,1,0 */
#define TERM_L_DARK              8  /* 'D' */   /* 1,1,1 */
#define TERM_L_WHITE             9  /* 'W' */   /* 3,3,3 */
#define TERM_VIOLET             10  /* 'v' */   /* 4,0,4 */
#define TERM_YELLOW             11  /* 'y' */   /* 4,4,0 */
#define TERM_L_RED              12  /* 'R' */   /* 4,0,0 */
#define TERM_L_GREEN            13  /* 'G' */   /* 0,4,0 */
#define TERM_L_BLUE             14  /* 'B' */   /* 0,4,4 */
#define TERM_L_UMBER            15  /* 'U' */   /* 3,2,1 */

struct hash_entry
{
	int id;				/* The character ID */
	u32b account;			/* account id */
	cptr name;			/* Player name */

	/* new in 3.4.2 */
	byte level;			/* Player maximum level */
	byte party;			/* Player party */
	/* 3.5.0 */
	byte guild;			/* Player guild */
	s16b quest;			/* Player quest */

	time_t laston;			/* Last on time */
	struct hash_entry *next;	/* Next entry in the chain */
};

extern struct hash_entry *lookup_player(int id);
extern int lookup_player_id(cptr name);

/* probably this shouldn't be here? */
struct server_opts
{
	s16b runlevel;		/* Glorified shutdown mode */
	time_t closetime;	/* Server closedown time */
	char * meta_address;
	char * bind_name;
	char * console_password;
	char * admin_wizard;
	char * dungeon_master;
	s32b preserve_death_level;
	s32b unique_respawn_time;
	s32b unique_max_respawn_time;
	s32b level_unstatic_chance;
	s32b min_unstatic_level;
	s32b retire_timer;
	s32b game_port;
	s32b console_port;
	s32b spell_interfere;
	s32b spell_stack_limit;
	s16b fps;
	s16b newbies_cannot_drop;
	s16b running_speed;
	s16b anti_scum;
	s16b dun_unusual;
	s16b town_x;
	s16b town_y;
	s16b town_base;
	s16b dun_base;
	s16b dun_max;
	s16b store_turns;
	char resting_rate;
	char party_xp_boost;
	char use_pk_rules;
	char quit_ban_mode;
	char zang_monsters;
	char pern_monsters;
	char cth_monsters;
	char joke_monsters;
	char vanilla_monsters;
	char pet_monsters;
	bool report_to_meta;
	bool secret_dungeon_master;
	bool anti_arts_horde;
	bool mage_hp_bonus;
	char door_bump_open;
	bool no_ghost;
	bool maximize;
	bool kings_etiquette;
	bool public_rfe;
	bool auto_purge;
};

extern s32b turn;
extern server_opts cfg;

$extern s32b intMod(s32b a, s32b b);
$extern s32b intAnd(s32b a, s32b b);
$extern s32b intOr(s32b a, s32b b);
$extern s32b intXor(s32b a, s32b b);
$extern s32b intShiftl(s32b a, s32b b);
$extern s32b intShiftr(s32b a, s32b b);
$extern s32b intBitNot(s32b b);

extern s32b intMod @ mod(s32b a, s32b b);
extern s32b intAnd @ band(s32b a, s32b b);
extern s32b intOr @ bor(s32b a, s32b b);
extern s32b intXor @ bxor(s32b a, s32b b);
extern s32b intShiftl @ bshl(s32b a, s32b b);
extern s32b intShiftr @ bshr(s32b a, s32b b);
extern s32b intBitNot @ bnot(s32b b);

extern bool pern_dofile(int Ind, char *file);
extern bool exec_lua(int Ind, char *file);
extern void cat_script(int Ind, char *name);

extern void msg_print(int Ind, cptr msg);
extern void msg_broadcast(int Ind, cptr msg);
extern void msg_print_near(int Ind, cptr msg);
extern void msg_admin(cptr msg);

/* maintain hooks with LUA, not with server code */
extern void wipe_hooks(void);
extern void dump_hooks(void);
extern hooks_chain* add_hook(int h_idx, cptr script, cptr name);

#define HOOK_MONSTER_DEATH      0
#define HOOK_OPEN               1
#define HOOK_GEN_QUEST          2
#define HOOK_END_TURN           3
#define HOOK_FEELING            4
#define HOOK_NEW_MONSTER        5
#define HOOK_GEN_LEVEL          6
#define HOOK_BUILD_ROOM1        7
#define HOOK_NEW_LEVEL          8
#define HOOK_QUEST_FINISH       9
#define HOOK_QUEST_FAIL         10
#define HOOK_GIVE               11
#define HOOK_CHAR_DUMP          12
#define HOOK_INIT_QUEST         13
#define HOOK_WILD_GEN           14
#define HOOK_DROP               15
#define HOOK_IDENTIFY           16
#define HOOK_MOVE               17
#define HOOK_STAIR              18
#define HOOK_MONSTER_AI         19
#define HOOK_PLAYER_LEVEL       20
#define HOOK_WIELD              21
#define HOOK_INIT               22
#define HOOK_QUAFF              23
#define HOOK_AIM                24
#define HOOK_USE                25
#define HOOK_ACTIVATE           26
#define HOOK_ZAP                27
#define HOOK_READ               28
#define HOOK_CALC_BONUS         29
#define HOOK_PLAYER_FLAGS       30
#define HOOK_KEYPRESS           31
#define HOOK_CHAT               32
#define HOOK_MON_SPEAK          33
#define HOOK_MKEY               34
#define HOOK_BIRTH_OBJECTS      35
#define HOOK_ACTIVATE_DESC      36
#define HOOK_INIT_GAME          37
#define HOOK_ACTIVATE_POWER     38
#define HOOK_ITEM_NAME          39
#define HOOK_SAVE_GAME          40
#define HOOK_LOAD_GAME          41
#define HOOK_LEVEL_REGEN        42
#define HOOK_LEVEL_END_GEN      43
