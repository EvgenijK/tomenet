/* File: defines.h */

/* Purpose: global constants and macro definitions */


/*
 * Do not edit this file unless you know *exactly* what you are doing.
 *
 * Some of the values in this file were chosen to preserve game balance,
 * while others are hard-coded based on the format of old save-files, the
 * definition of arrays in various places, mathematical properties, fast
 * computation, storage limits, or the format of external text files.
 *
 * Changing some of these values will induce crashes or memory errors or
 * savefile mis-reads.  Most of the comments in this file are meant as
 * reminders, not complete descriptions, and even a complete knowledge
 * of the source may not be sufficient to fully understand the effects
 * of changing certain definitions.
 *
 * Lastly, note that the code does not always use the symbolic constants
 * below, and sometimes uses various hard-coded values that may not even
 * be defined in this file, but which may be related to definitions here.
 * This is of course bad programming practice, but nobody is perfect...
 *
 * For example, there are MANY things that depend on the screen being
 * 80x24, with the top line used for messages, the bottom line being
 * used for status, and exactly 22 lines used to show the dungeon.
 * Just because your screen can hold 46 lines does not mean that the
 * game will work if you try to use 44 lines to show the dungeon.
 *
 * You have been warned.
 */

/*
 * Current version number of PernMAngband:
 */
 
#define VERSION_MAJOR	3
#define VERSION_MINOR   3
#define VERSION_PATCH   5

/*
 * This value specifies the suffix to the version info sent to the metaserver.
 *
 * 0 - nothing
 * 1 - "alpha"
 * 2 - "beta"
 * 3 - "development"
 */
#define VERSION_EXTRA	1


/*
 * This value is a single 16-bit number holding the version info
 */

#define MY_VERSION (VERSION_MAJOR << 12 | VERSION_MINOR << 8 | VERSION_PATCH \
	<< 4 | VERSION_EXTRA)


/*
 * Define the maximum number of characters to use in many things
 */
#define MAX_CHARS 80


/*
 * The maximum number of player ID's
 */
#define MAX_ID 4096


/*
 * Maximum message length
 */
#define MSG_LEN 256


/*
 * This is very important...
 *
 * This is the number of "frames" to produce per second.  It determines
 * the speed of the game.
 */
#define FPS 12

/* maximum respawn time for uniques.... from japanese patch */
#define COME_BACK_TIME_MAX 600

/*
 * The types of communication that we send to the metaserver
 */
#define META_START	0x01
#define META_DIE	0x02
#define META_UPDATE	0x04


/*
 * Number of grids used to display the dungeon (vertically).
 * Must be a multiple of 11, probably hard-coded to 22.
 */
#define SCREEN_HGT	22

/*
 * Number of grids used to display the dungeon (horizontally).
 * Must be a multiple of 33, probably hard-coded to 66.
 */
#define SCREEN_WID	66


/*
 * Maximum dungeon height in grids, must be a multiple of SCREEN_HGT,
 * probably hard-coded to SCREEN_HGT * 3.
 */
#define MAX_HGT		66

/*
 * Maximum dungeon width in grids, must be a multiple of SCREEN_WID,
 * probably hard-coded to SCREEN_WID * 3.
 */
#define MAX_WID		198

/* Used only in object3.c / trap effects (PernA) */
#if ((MAX_HGT / SCREEN_HGT) < (MAX_WID / SCREEN_WID))
 #define RATIO (MAX_WID / SCREEN_WID)
#else
 #define RATIO (MAX_HGT / SCREEN_HGT)
#endif

/*
 * Hack -- This is used to make sure that every player that has a structure
 * dedicated to them is actually connected
 */
#define NOT_CONNECTED	(-1)


/*
 * Maximum number of players playing at once.
 *
 * This limit has never been stretched, and it would be interesting to see
 * what happens when 100 or so players play at once.
 */
#define MAX_PLAYERS	1000

/*
 * Total number of stores (see "store.c", etc)
 */
#define MAX_STORES	9

/*
 * Total number of owners per store (see "store.c", etc)
 */
#define MAX_OWNERS	4

/*
 * Maximum number of player "race" types (see "table.c", etc)
 */
#define MAX_RACES           14

/*
 * Maximum number of player "class" types (see "table.c", etc)
 */
#define MAX_CLASS            12

/*
 * Maximum number of parties to allow.  If, while trying to create a new
 * party, you get a "No empty party slot" or somesuch message, increase
 * this number.  However, you should NEVER decrease this number after a
 * server has been run, or all sorts of bad things could happen.
 */
#define MAX_PARTIES	256

/*
 * Maximum number of houses available.
 */
#define MAX_HOUSES	65536	/* temp value... */
#define HOUSE_KEY	0
#define HOUSE_PASS	1

/*
 * Number of entries in the player name hash table.
 * This must be a power of 2!
 */
#define NUM_HASH_ENTRIES	256


/*
 * Maximum array bounds for template based arrays
 */
 
#define MAX_F_IDX	128	/* Max size for "f_info[]" */
//#define MAX_K_IDX	543	/* Max size for "k_info[]" */
//#define MAX_K_IDX	1024	/* Max size for "k_info[]" */
#define MAX_K_IDX	768 /* Max size for "k_info[]" */
//#define MAX_A_IDX	128	/* Max size for "a_info[]" */
#define MAX_A_IDX	256	/* Max size for "a_info[]" */
#define MAX_E_IDX	256 /* Max size for "e_info[]" */
//#define MAX_R_IDX	563 /* Max size for "r_info[]"  551 + 12 (Tanix fix) */
#define MAX_R_IDX	1152	/* Max size for "r_info[]" */
#define MAX_V_IDX 	256	/* Max size for "v_info[]" */
#define MAX_RE_IDX	128	/* Max size for "re_info[]" */
#define MAX_T_IDX	256 /* Max size for "re_info[]" */



/*
 * Maximum array bounds for entity list arrays
 */
#define MAX_O_IDX	32768	/* Max size for "o_list[]" */
#define MAX_M_IDX 	32768	/* Max size for "m_list[]" */
#define MAX_TR_IDX 	32768	/* Max size for "tr_list[]" */


/*
 * Hack -- Maximum number of quests
 */
#define MAX_Q_IDX	4

/*
 * Maximum number of high scores in the high score file
 */
#define MAX_HISCORES	100


/*
 * Maximum dungeon level.  The player can never reach this level
 * in the dungeon, and this value is used for various calculations
 * involving object and monster creation.  It must be at least 100.
 * Setting it below 128 may prevent the creation of some objects.
 */
#ifdef NEW_DUNGEON
#define MAX_WILD_X	64
#define MAX_WILD_Y	64
#define MAX_WILD	(MAX_WILD_X*MAX_WILD_Y)
#define MAX_WILD_8	((MAX_WILD_X*MAX_WILD_Y)/8)
#else
#define MAX_DEPTH       201

/* The number of wilderness levels we have allocated.
*/
#define MAX_WILD        4096
#define MAX_WILD_8      (MAX_WILD/8)
#endif
#define MAX_DEPTH_OBJ   128


/*
 * Maximum size of the "lite" array (see "cave.c")
 * Note that the "lite radius" will NEVER exceed 5, and even if the "lite"
 * was rectangular, we would never require more than 128 entries in the array.
 */
#define LITE_MAX 128

/*
 * Maximum size of the "view" array (see "cave.c")
 * Note that the "view radius" will NEVER exceed 20, and even if the "view"
 * was octagonal, we would never require more than 1520 entries in the array.
 */
#define VIEW_MAX 1536

/*
 * Maximum size of the "temp" array (see "cave.c")
 * We must be as large as "VIEW_MAX" and "LITE_MAX" for proper functioning
 * of "update_view()" and "update_lite()".  We must also be as large as the
 * largest illuminatable room, but no room is larger than 800 grids.  We
 * must also be large enough to allow "good enough" use as a circular queue,
 * to calculate monster flow, but note that the flow code is "paranoid".
 */
#define TEMP_MAX 1536


/*
 * OPTION: Maximum number of macros (see "io.c")
 * Default: assume at most 256 macros are used
 */
#define MACRO_MAX	256

/*
 * OPTION: Maximum number of "quarks" (see "io.c")
 * Default: assume at most 512 different inscriptions are used
 */
#define QUARK_MAX	1024

/*
 * OPTION: Maximum number of messages to remember (see "io.c")
 * Default: assume maximal memorization of 2048 total messages
 */
#define MESSAGE_MAX	2048

/*
 * OPTION: Maximum space for the message text buffer (see "io.c")
 * Default: assume that each of the 2048 messages is repeated an
 * average of three times, and has an average length of 48
 */
#define MESSAGE_BUF	32768


/*
 * Maximum value storable in a "byte" (hard-coded)
 */
#define MAX_UCHAR       255

/*
 * Maximum value storable in a "s16b" (hard-coded)
 */
#define MAX_SHORT       32767


/*
 * Party commands
 */
#define PARTY_CREATE	1
#define PARTY_ADD	2
#define PARTY_DELETE	3
#define PARTY_REMOVE_ME	4
#define PARTY_HOSTILE	5
#define PARTY_PEACE	6

/* 
 * Dungeon master commands
 */
#define	MASTER_NULL	0
#define	MASTER_LEVEL	1
#define MASTER_BUILD	2
#define	MASTER_SUMMON	3
#define MASTER_GENERATE	4
#define MASTER_PLAYER	5
#define	MASTER_SCRIPTL  6
#define	MASTER_SCRIPTB  7
#define	MASTER_SCRIPTE  8
#define	MASTER_SCRIPTS  9

#define	MASTER_SUMMON_SPEFIC	0	
#define	MASTER_SUMMON_

#define	MASTER_SCRIPTB_W        'w'
#define	MASTER_SCRIPTB_A        'a'


/*
 * Methods of leaving a level
 */
#define LEVEL_UP	0
#define LEVEL_DOWN	1
#define LEVEL_RAND	2
#define LEVEL_GHOST	3
#define	LEVEL_OUTSIDE   4
#define LEVEL_OUTSIDE_RAND 5


/*
 * The types of special file perusal.
 */
#define SPECIAL_FILE_NONE	0
#define SPECIAL_FILE_UNIQUE	1
#define SPECIAL_FILE_ARTIFACT	2
#define SPECIAL_FILE_PLAYER	3
#define SPECIAL_FILE_OTHER	4
#define SPECIAL_FILE_SCORES	5
#define SPECIAL_FILE_HELP	6
#define SPECIAL_FILE_PLAYER_EQUIP      7


/*
 * The commands that can be given to the new console
 */
#define CONSOLE_STATUS			  10
#define CONSOLE_PLAYER_INFO		  11
#define CONSOLE_ARTIFACT_LIST		  12
#define CONSOLE_UNIQUE_LIST		  13
#define CONSOLE_CHANGE_ARTIFACT		  14
#define CONSOLE_CHANGE_UNIQUE		  15
#define CONSOLE_SHUTDOWN		  16
#define CONSOLE_MESSAGE			  17
#define CONSOLE_KICK_PLAYER		  18
#define CONSOLE_RELOAD_SERVER_PREFERENCES 19

/*
 * The replies that the new console can send
 */
#define CONSOLE_DENIED		100

/*
 * Store constants
 */
#define STORE_INVEN_MAX	48		/* Max number of discrete objs in inven */
#define STORE_CHOICES	32		/* Number of items to choose stock from */
#define STORE_OBJ_LEVEL	5		/* Magic Level for normal stores */
#define STORE_TURNOVER	9		/* Normal shop turnover, per day */
#define STORE_MIN_KEEP	12		/* Min slots to "always" keep full */
#define STORE_MAX_KEEP	36		/* Max slots to "always" keep full */
#define STORE_SHUFFLE	25		/* 1/Chance (per day) of an owner changing */
#define STORE_TURNS	500		/* Number of turns between turnovers */


/*
 * Misc constants
 */
#define SERVER_SAVE	500		/* How often to save the server state (100) */
#define TOWN_DAWN		10000	/* Number of turns from dawn to dawn XXX */
#define GROW_TREE	5000		/* How often to grow a new tree in town */
#define BREAK_GLYPH		550		/* Rune of protection resistance */
#define BTH_PLUS_ADJ    3       /* Adjust BTH per plus-to-hit */
#define MON_MULT_ADJ	8		/* High value slows multiplication */
#define MON_SUMMON_ADJ	2		/* Adjust level of summoned creatures */
#define MON_DRAIN_LIFE	2		/* Percent of player exp drained per hit */
#define USE_DEVICE      3		/* x> Harder devices x< Easier devices     */

/*
 * There is a 1/20 (5%) chance of inflating the requested object_level
 * during the creation of an object (see "get_obj_num()" in "object.c").
 * Lower values yield better objects more often.
 */
#define GREAT_OBJ	20

/*
 * There is a 1/50 (2%) chance of inflating the requested monster_level
 * during the creation of a monsters (see "get_mon_num()" in "monster.c").
 * Lower values yield harder monsters more often.
 */
#define NASTY_MON	50		/* 1/chance of inflated monster level */



/*
 * Refueling constants
 */
#define FUEL_TORCH	5000	/* Maximum amount of fuel in a torch */
#define FUEL_LAMP	15000   /* Maximum amount of fuel in a lantern */


/*
 * More maximum values
 */
#define MAX_SIGHT	20	/* Maximum view distance */
#define MAX_RANGE	18	/* Maximum range (spells, etc) */



/*
 * There is a 1/160 chance per round of creating a new monster
 */
#define MAX_M_ALLOC_CHANCE	160

/*
 * Normal levels get at least 14 monsters
 */
#define MIN_M_ALLOC_LEVEL	14

/*
 * The town starts out with 4 residents during the day
 */
#define MIN_M_ALLOC_TD		4

/*
 * The town starts out with 8 residents during the night
 */
#define MIN_M_ALLOC_TN		8


/* Macros for determing if it is night or day */

#define		IS_DAY	 ((turn % (10L * TOWN_DAWN)) <= (10L * TOWN_DAWN / 2))
#define		IS_NIGHT ((turn % (10L * TOWN_DAWN)) > (10L * TOWN_DAWN / 2))	


/*
 * A monster can only "multiply" (reproduce) if there are fewer than 100
 * monsters on the level capable of such spontaneous reproduction.  This
 * is a hack which prevents the "m_list[]" array from exploding due to
 * reproducing monsters.  Messy, but necessary.
 */
#define MAX_REPRO	100


/*
 * Player constants
 */
#define PY_MAX_EXP      999999999L       /* Maximum exp */
#define PY_MAX_GOLD	999999999L	/* Maximum gold */
#define PY_MAX_LEVEL    100             /* Maximum level */

/*
 * Player "food" crucial values
 */
#define PY_FOOD_MAX		15000	/* Food value (Bloated) */
#define PY_FOOD_FULL	10000	/* Food value (Normal) */
#define PY_FOOD_ALERT	2000	/* Food value (Hungry) */
#define PY_FOOD_WEAK	1000	/* Food value (Weak) */
#define PY_FOOD_FAINT	500		/* Food value (Fainting) */
#define PY_FOOD_STARVE	100		/* Food value (Starving) */

/*
 * Player regeneration constants
 */
#define PY_REGEN_NORMAL		197		/* Regen factor*2^16 when full */
#define PY_REGEN_WEAK		98		/* Regen factor*2^16 when weak */
#define PY_REGEN_FAINT		33		/* Regen factor*2^16 when fainting */
#define PY_REGEN_HPBASE		1442	/* Min amount hp regen*2^16 */
#define PY_REGEN_MNBASE		524		/* Min amount mana regen*2^16 */


/* Randart rarity */
#define RANDART_RARITY  80


/*
 * Maximum number of "normal" pack slots, and the index of the "overflow"
 * slot, which can hold an item, but only temporarily, since it causes the
 * pack to "overflow", dropping the "last" item onto the ground.  Since this
 * value is used as an actual slot, it must be less than "INVEN_WIELD" (below).
 * Note that "INVEN_PACK" is probably hard-coded by its use in savefiles, and
 * by the fact that the screen can only show 23 items plus a one-line prompt.
 */
#define INVEN_PACK		23

/*
 * Indexes used for various "equipment" slots (hard-coded by savefiles, etc).
 */
#define INVEN_WIELD		24
#define INVEN_BOW       25
#define INVEN_LEFT      26
#define INVEN_RIGHT     27
#define INVEN_NECK      28
#define INVEN_LITE      29
#define INVEN_BODY      30
#define INVEN_OUTER     31
#define INVEN_ARM       32
#define INVEN_HEAD      33
#define INVEN_HANDS     34
#define INVEN_FEET      35

/*
 * Total number of inventory slots (hard-coded).
 */
#define INVEN_TOTAL	36


/*
 * A "stack" of items is limited to less than 100 items (hard-coded).
 */
#define MAX_STACK_SIZE			100



/*
 * Indexes of the various "stats" (hard-coded by savefiles, etc).
 */
#define A_STR	0
#define A_INT	1
#define A_WIS	2
#define A_DEX	3
#define A_CON	4
#define A_CHR	5

/*
 * Player race constants (hard-coded by save-files, arrays, etc)
 */
#define RACE_HUMAN		0
#define RACE_HALF_ELF	1
#define RACE_ELF		2
#define RACE_HOBBIT		3
#define RACE_GNOME		4
#define RACE_DWARF		5
#define RACE_HALF_ORC	6
#define RACE_HALF_TROLL	7
#define RACE_DUNADAN	8
#define RACE_HIGH_ELF	9
#define RACE_YEEK   	10
#define RACE_GOBLIN 	11
#define RACE_ENT   	12
#define RACE_DRIDER   	13

/*
 * Player class constants (hard-coded by save-files, arrays, etc)
 */
#define CLASS_WARRIOR		0
#define CLASS_MAGE		1
#define CLASS_PRIEST		2
#define CLASS_ROGUE		3
#define CLASS_RANGER		4
#define CLASS_PALADIN		5
#define CLASS_SORCERER		6
#define CLASS_MIMIC		7
#define CLASS_UNBELIEVER	8
#define CLASS_ARCHER		9
#define CLASS_MONK              10
#define CLASS_TELEPATH		11



/*** Screen Locations ***/

/*
 * Some screen locations for various display routines
 * Currently, row 8 and 15 are the only "blank" rows.
 * That leaves a "border" around the "stat" values.
 */

#define ROW_RACE		1
#define COL_RACE		0	/* <race name> */

#define ROW_CLASS		2
#define COL_CLASS		0	/* <class name> */

#define ROW_TITLE		3
#define COL_TITLE		0	/* <title> or <mode> */

#define ROW_LEVEL		4
#define COL_LEVEL		0	/* "LEVEL xxxxxx" */

#define ROW_EXP			5
#define COL_EXP			0	/* "EXP xxxxxxxx" */

#define ROW_GOLD		6
#define COL_GOLD		0	/* "AU xxxxxxxxx" */

#define ROW_STAT		8
#define COL_STAT		0	/* "xxx   xxxxxx" */

#define ROW_AC			15
#define COL_AC			0	/* "Cur AC xxxxx" */

#define ROW_MAXHP		16
#define COL_MAXHP		0	/* "Max HP xxxxx" */

#define ROW_CURHP		17
#define COL_CURHP		0	/* "Cur HP xxxxx" */

#define ROW_MAXSP		18
#define COL_MAXSP		0	/* "Max SP xxxxx" */

#define ROW_CURSP		19
#define COL_CURSP		0	/* "Cur SP xxxxx" */

#define ROW_SANITY              20      /* "Sanity  100%" */
#define COL_SANITY              0

#if 1
#define ROW_INFO		20
#define COL_INFO		0	/* "xxxxxxxxxxxx" */
#endif	// 0

#define ROW_CUT			21
#define COL_CUT			0	/* <cut> */

#define ROW_STUN		22
#define COL_STUN		0	/* <stun> */

#define ROW_HUNGRY		23
#define COL_HUNGRY		0	/* "Weak" / "Hungry" / "Full" / "Gorged" */

#define ROW_BLIND		23
#define COL_BLIND		7	/* "Blind" */

#define ROW_CONFUSED	23
#define COL_CONFUSED	13	/* "Confused" */

#define ROW_AFRAID		23
#define COL_AFRAID		22	/* "Afraid" */

#define ROW_POISONED	23
#define COL_POISONED	29	/* "Poisoned" */

#define ROW_STATE		23
#define COL_STATE		38	/* <state> */

#define ROW_SPEED		23
#define COL_SPEED		49	/* "Slow (-NN)" or "Fast (+NN)" */

#define ROW_STUDY		23
#define COL_STUDY		64	/* "Study" */

#define ROW_DEPTH		23
#define COL_DEPTH		70	/* "Lev NNN" / "NNNN ft" */



/*** Terrain Feature Indexes (see "lib/edit/f_info.txt") ***/
/* Reform scheduled!! */

/* Nothing */
#define FEAT_NONE		0x00

/* Various */
#define FEAT_FLOOR		0x01
#define FEAT_GRASS		0x02
#define FEAT_DIRT		0x03
#define FEAT_CROP		0x04
#define FEAT_LOOSE_DIRT		0x05
#define FEAT_WATER		0x06
#define	FEAT_MUD		0x07

#define FEAT_INVIS		0x08
#define FEAT_GLYPH		0x09
#define FEAT_OPEN		0x0A
#define FEAT_BROKEN		0x0B
#define FEAT_LESS		0x0C
#define FEAT_MORE		0x0D
#define FEAT_HOME_OPEN		0x0E

/* Traps */
#define FEAT_TRAP_HEAD	0x10
#define FEAT_TRAP_TAIL	0x1F

/* Trees */
#define FEAT_TREE	0x20
#define FEAT_EVIL_TREE  0x21

#define FEAT_SIGN	0x22

/* Special "home doors" */
#define FEAT_HOME_HEAD	0x28
#define FEAT_HOME_TAIL	0x2F

/* adding various wilderness features here.
feat_perm is used for an "invisible" outside wall
that keeps many algorithms happy.
-APD- */

#define FEAT_PERM_CLEAR 0x30
#define FEAT_LOGS	0x31
#define FEAT_DRAWBRIDGE 0x40	

/* Shops */
/* changed FEAT_SHOP_TAIL to 0x50 for auction house */
#define FEAT_SHOP_HEAD	0x48
#define FEAT_SHOP_TAIL	0x50

/* Doors */
#define FEAT_DOOR_HEAD	0x60
#define FEAT_DOOR_TAIL	0x6F

/* Extra */
#define FEAT_SECRET		0x70
#define FEAT_RUBBLE		0x71

/* Seams */
#define FEAT_MAGMA		0x72
#define FEAT_QUARTZ		0x73
#define FEAT_MAGMA_H	0x74
#define FEAT_QUARTZ_H	0x75
#define FEAT_MAGMA_K	0x76
#define FEAT_QUARTZ_K	0x77

/* Walls */
#define FEAT_WALL_EXTRA	0x78
#define FEAT_WALL_INNER	0x79
#define FEAT_WALL_OUTER	0x7A
#define FEAT_WALL_SOLID	0x7B
#define FEAT_PERM_EXTRA	0x7C
#define FEAT_PERM_INNER	0x7D
#define FEAT_PERM_OUTER	0x7E
#define FEAT_PERM_SOLID	0x7F

/*** Artifact indexes (see "lib/edit/a_info.txt") ***/

#if 0
/* Lites */
#define ART_GALADRIEL		1
#define ART_ELENDIL			2
#define ART_THRAIN			3

/* Amulets */
#define ART_CARLAMMAS		4
#define ART_INGWE			5
#define ART_DWARVES			6

/* Rings */
#define ART_BARAHIR			8
#define ART_TULKAS			9
#define ART_NARYA			10
#define ART_NENYA			11
#define ART_VILYA			12
#define ART_POWER			13

/* Dragon Scale */
#define ART_RAZORBACK		16
#define ART_BLADETURNER		17

/* Hard Armour */
#define ART_SOULKEEPER		19
#define ART_ISILDUR			20
#define ART_ROHIRRIM		21
#define ART_BELEGENNON		22
#define ART_CELEBORN		23
#define ART_ARVEDUI			24
#define ART_CASPANION		25

/* Soft Armour */
#define ART_HITHLOMIR		27
#define ART_THALKETTOTH		28

/* Shields */
#define ART_THORIN			30
#define ART_CELEGORM		31
#define ART_ANARION			32

/* Helms and Crowns */
#define ART_MORGOTH			34
#define ART_BERUTHIEL		35
#define ART_THRANDUIL		36
#define ART_THENGEL			37
#define ART_HAMMERHAND		38
#define ART_DOR				39
#define ART_HOLHENNETH		40
#define ART_GORLIM			41
#define ART_GONDOR			42

/* Cloaks */
#define ART_COLLUIN			44
#define ART_HOLCOLLETH		45
#define ART_THINGOL			46
#define ART_THORONGIL		47
#define ART_COLANNON		48
#define ART_LUTHIEN			49
#define ART_TUOR			50

/* Gloves */
#define ART_CAMBELEG		52
#define ART_CAMMITHRIM		53
#define ART_PAURHACH		54
#define ART_PAURNIMMEN		55
#define ART_PAURAEGEN		56
#define ART_PAURNEN			57
#define ART_CAMLOST			58
#define ART_FINGOLFIN		59

/* Boots */
#define ART_FEANOR			60
#define ART_DAL				61
#define ART_THROR			62

/* Swords */
#define ART_MAEDHROS		64
#define ART_ANGRIST			65
#define ART_NARTHANC		66
#define ART_NIMTHANC		67
#define ART_DETHANC			68
#define ART_RILIA			69
#define ART_BELANGIL		70
#define ART_CALRIS			71
#define ART_ARUNRUTH		72
#define ART_GLAMDRING		73
#define ART_AEGLIN			74
#define ART_ORCRIST			75
#define ART_GURTHANG		76
#define ART_ZARCUTHRA		77
#define ART_MORMEGIL		78
#define ART_GONDRICAM		79
#define ART_CRISDURIAN		80
#define ART_AGLARANG		81
#define ART_RINGIL			82
#define ART_ANDURIL			83
#define ART_ANGUIREL		84
#define ART_ELVAGIL			85
#define ART_FORASGIL		86
#define ART_CARETH			87
#define ART_STING			88
#define ART_HARADEKKET		89
#define ART_GILETTAR		90
#define ART_DOOMCALLER		91

/* Polearms */
#define ART_THEODEN			93
#define ART_PAIN			94
#define ART_OSONDIR			95
#define ART_TIL				96
#define ART_AEGLOS			97
#define ART_OROME			98
#define ART_NIMLOTH			99
#define ART_EORLINGAS		100
#define ART_DURIN			101
#define ART_EONWE			102
#define ART_BALLI			103
#define ART_LOTHARANG		104
#define ART_MUNDWINE		105
#define ART_BARUKKHELED		106
#define ART_WRATH			107
#define ART_ULMO			108
#define ART_AVAVIR			109

/* Hafted */
#define ART_GROND			111
#define ART_TOTILA			112
#define ART_THUNDERFIST		113
#define ART_BLOODSPIKE		114
#define ART_FIRESTAR		115
#define ART_TARATOL			116
#define ART_AULE			117
#define ART_NAR				118
#define ART_ERIRIL			119
#define ART_OLORIN			120
#define ART_DEATHWREAKER	121
#define ART_TURMIL			122

/* Bows */
#define ART_BELTHRONDING	124
#define ART_BARD			125
#define ART_CUBRAGOL		126

/* Randarts */
#define ART_RANDART		127

#endif	// 0

/* Randarts */
#define ART_RANDART		255

/* Lites */
#define ART_GALADRIEL                   1
#define ART_ELENDIL                     2
#define ART_THRAIN                      3
#define ART_PALANTIR                    202
#define ART_UNDEATH                     200
#define ART_STONE_LORE                  15
#define ART_PALANTIR_ITHIL              208

/* Amulets */
#define ART_CARLAMMAS           4
#define ART_INGWE                       5
#define ART_DWARVES                     6
#define ART_ANCHOR                      14
#define ART_ELESSAR                     206
#define ART_EVENSTAR                    207

/* Rings */
#define ART_FLAR                        7
#define ART_BARAHIR                     8
#define ART_TULKAS                      9
#define ART_NARYA                       10
#define ART_NENYA                       11
#define ART_VILYA                       12
#define ART_POWER                       13
/* 14 used by the anchor of space-time */
/* 15 used by the stone of lore */

/* Dragon Scale */
#define ART_RAZORBACK           16
#define ART_BLADETURNER         17
#define ART_MEDIATOR            166

/* Hard Armour */
#define ART_HIMRING             167
#define ART_SOULKEEPER          19
#define ART_ISILDUR                     20
#define ART_ROHIRRIM            21
#define ART_BELEGENNON          22
#define ART_CELEBORN            23
#define ART_ARVEDUI                     24
#define ART_CASPANION           25

/* DragonRider flying suit */
#define ART_MARDA               26
#define ART_TRON                27

/* Soft Armour */
#define ART_THALKETTOTH         28

/* Shields */
#define ART_THORIN                      30
#define ART_CELEGORM            31
#define ART_ANARION                     32
#define ART_GILGALAD                    169
#define ART_HARADRIM                    176

/* Helms and Crowns */
#define ART_MORGOTH                     34
#define ART_BERUTHIEL           35
#define ART_THRANDUIL           36
#define ART_THENGEL                     37
#define ART_HAMMERHAND          38
#define ART_DOR                         39
#define ART_HOLHENNETH          40
#define ART_GORLIM                      41
#define ART_GONDOR                      42
#define ART_KNOWLEDGE                   160
#define ART_NUMENOR                     43
#define ART_CELEBRIMBOR                 170

/* Cloaks */
#define ART_COLLUIN                     44
#define ART_HOLCOLLETH          45
#define ART_THINGOL                     46
#define ART_THORONGIL           47
#define ART_COLANNON            48
#define ART_LUTHIEN                     49
#define ART_TUOR                        50

/* Gloves */
#define ART_CAMBELEG            52
#define ART_CAMMITHRIM          53
#define ART_PAURHACH            54
#define ART_PAURNIMMEN          55
#define ART_PAURAEGEN           56
#define ART_PAURNEN                     57
#define ART_CAMLOST                     58
#define ART_FINGOLFIN           59
#define ART_EOL                 178

/* Boots */
#define ART_FEANOR                      60
#define ART_DAL                         61
#define ART_THROR                       62

/* Swords */
#define ART_NARSIL              164
#define ART_MAEDHROS            64
#define ART_ANGRIST                     65
#define ART_NARTHANC            66
#define ART_NIMTHANC            67
#define ART_DETHANC                     68
#define ART_RILIA                       69
#define ART_BELANGIL            70
#define ART_CALRIS                      71
#define ART_ARUNRUTH            72
#define ART_GLAMDRING           73
#define ART_AEGLIN                      74
#define ART_ORCRIST                     75
#define ART_GURTHANG            76
#define ART_ZARCUTHRA           77
#define ART_MORMEGIL            78
#define ART_GONDRICAM           79
#define ART_CRISDURIAN          80
#define ART_AGLARANG            81
#define ART_RINGIL                      82
#define ART_ANDURIL                     83
#define ART_ANGUIREL            84
#define ART_ELVAGIL                     85
#define ART_FORASGIL            86
#define ART_CARETH                      87
#define ART_STING                       88
#define ART_HARADEKKET          89
#define ART_GILETTAR            90
#define ART_DOOMCALLER          91
#define ART_VORPAL_BLADE        92
#define ART_ERU                 147

/* Polearms */
#define ART_THEODEN                     93
#define ART_PAIN                        94
#define ART_OSONDIR                     95
#define ART_TIL                         96
#define ART_AEGLOS                      97
#define ART_OROME                       98
#define ART_NIMLOTH                     99
#define ART_EORLINGAS           100
#define ART_DURIN                       101
#define ART_EONWE                       102
#define ART_BALLI                       103
#define ART_LOTHARANG           104
#define ART_MUNDWINE            105
#define ART_BARUKKHELED         106
#define ART_WRATH                       107
#define ART_ULMO                        108
#define ART_AVAVIR                      109
#define ART_FUNDIN                      175

/* The sword of the Dawn */
#define ART_DAWN                110

/* Hafted */
#define ART_MELKOR                      18
#define ART_HURIN                       33
#define ART_GROND                       111
#define ART_TOTILA                      112
#define ART_THUNDERFIST         113
#define ART_BLOODSPIKE          114
#define ART_FIRESTAR            115
#define ART_TARATOL                     116
#define ART_AULE                        117
#define ART_NAR                         118
#define ART_ERIRIL                      119
#define ART_OLORIN                      120
#define ART_DEATHWREAKER        121
#define ART_TURMIL                      122
#define ART_GOTHMOG                     123
#define ART_AXE_GOTHMOG                 145
#define ART_SKULLCLEAVER                177

#define ART_NAIN                        174

/* Bows */
#define ART_BELTHRONDING        124
#define ART_BARD                        125
#define ART_CUBRAGOL            126
#define ART_UMBAR                       171

/* Mage Staffs */
#define ART_GANDALF             127

/* Boomerangs */
#define ART_BEOR                128
#define ART_GLIMDRIR            129

/* Musical Instrument */
#define ART_ROBINTON            137
#define ART_PIEMUR              138
#define ART_MENOLLY             139
#define ART_DRUEDAIN            141
#define ART_ROHAN               142
#define ART_HELM                143
#define ART_BOROMIR             144

/* Diggers */
#define ART_EREBOR              140

#define ART_ORCHAST             156
#define ART_NIGHT               157
#define ART_NATUREBANE          158


/*** Ego-Item indexes (see "lib/edit/e_info.txt") ***/

#if 0
/* Nothing */
/* xxx */
/* xxx */
/* xxx */

/* Body Armor */
#define EGO_RESIST_ACID		4
#define EGO_RESIST_ELEC		5
#define EGO_RESIST_FIRE		6
#define EGO_RESIST_COLD		7
#define EGO_RESISTANCE		8
#define EGO_ELVENKIND		9
/* xxx */
#define EGO_PERMANENCE		11
/* xxx */
/* xxx */
/* xxx */
/* xxx */

/* Shields */
#define EGO_ENDURE_ACID		16
#define EGO_ENDURE_ELEC		17
#define EGO_ENDURE_FIRE		18
#define EGO_ENDURE_COLD		19
#define EGO_ENDURANCE		20
#define EGO_AVARI               21
/* xxx */
/* xxx */

/* Crowns and Helms */
#define EGO_INTELLIGENCE	24
#define EGO_WISDOM			25
#define EGO_BEAUTY			26
#define EGO_MAGI			27
#define EGO_MIGHT			28
#define EGO_LORDLINESS		29
#define EGO_SEEING			30
#define EGO_INFRAVISION		31
#define EGO_LITE			32
#define EGO_TELEPATHY		33
#define EGO_REGENERATION	34
#define EGO_TELEPORTATION	35
#define EGO_STUPIDITY		36
#define EGO_NAIVETY		37
#define EGO_UGLINESS		38
#define EGO_SICKLINESS		39

/* Cloaks */
#define EGO_PROTECTION		40
#define EGO_STEALTH		41
#define EGO_AMAN		42
#define EGO_TELERI              43
#define EGO_ENVELOPING		44
#define EGO_VULNERABILITY	45
#define EGO_IRRITATION		46
#define EGO_CLOAK_RES           47
#define EGO_CLOAK_LORDLY_RES	114 

/* Gloves */
#define EGO_FREE_ACTION		48
#define EGO_SLAYING		49
#define EGO_AGILITY		50
#define EGO_POWER		51
#define EGO_ISTARI              52
#define EGO_MAGIC               53
#define EGO_WEAKNESS		54
#define EGO_CLUMSINESS		55

/* Boots */
#define EGO_SLOW_DESCENT	56
#define EGO_QUIET		57
#define EGO_MOTION		58
#define EGO_SPEED		59
#define EGO_MIRKWOOD            60
#define EGO_NOISE		61
#define EGO_SLOWNESS		62
#define EGO_ANNOYANCE		63

/* Weapons */
#define EGO_HA			64
#define EGO_DF			65
#define EGO_BLESS_BLADE		66
#define EGO_MSTAFF_POWER       	67
#define EGO_WEST		68
#define EGO_ATTACKS		69
/* xxx */
/* xxx */
#define EGO_BRAND_ACID		72
#define EGO_BRAND_ELEC		73
#define EGO_BRAND_FIRE		74
#define EGO_BRAND_COLD		75
/* xxx */
/* xxx */
/* xxx */
/* xxx */
#define EGO_SLAY_ANIMAL		80
#define EGO_SLAY_EVIL		81
#define EGO_SLAY_UNDEAD		82
#define EGO_SLAY_DEMON		83
#define EGO_SLAY_ORC		84
#define EGO_SLAY_TROLL		85
#define EGO_SLAY_GIANT		86
#define EGO_SLAY_DRAGON		87
#define EGO_KILL_ANIMAL		88
#define EGO_KILL_EVIL		89
#define EGO_KILL_UNDEAD		90
#define EGO_KILL_DEMON		83
#define EGO_KILL_ORC		84
#define EGO_KILL_TROLL		85
#define EGO_KILL_GIANT		86
#define EGO_KILL_DRAGON		95
/* xxx */
/* xxx */
/* xxx */
/* xxx */
#define EGO_DIGGING			100
/* xxx */
#define EGO_MORGUL			102
/* xxx */

/* Bows */
#define EGO_ACCURACY		104
#define EGO_VELOCITY		105
#define EGO_LORIEN              106
#define EGO_NUMENOR             107
#define EGO_EXTRA_MIGHT		108
#define EGO_EXTRA_SHOTS		109
/* xxx */
/* xxx */

/* Ammo */
#define EGO_HURT_ANIMAL		112
#define EGO_HURT_EVIL		113
/* xxx */
/* xxx */
/* xxx */
/* xxx */
#define EGO_HURT_DRAGON		119
/* xxx */
/* xxx */
#define EGO_FLAME			122
#define EGO_FROST			123
#define EGO_WOUNDING		124
#define EGO_BACKBITING		125
#define EGO_SHATTERED		126
#define EGO_BLASTED			127

#endif	// 0

/* pfft, sort it please.. */
#define EGO_MANA                1
#define EGO_POWER               2
#define EGO_MANA_POWER          3
#define EGO_MSTAFF_SPELL        4
#define EGO_BRAND_POIS          77
#define EGO_BRAND_ELEC          74
#define EGO_BRAND_FIRE          75
#define EGO_BRAND_COLD          76
#define EGO_BRAND_ACID          73
#define EGO_EARTHQUAKES         80
#define EGO_BLESS_BLADE         67
#define EGO_VAMPIRIC            97
#define EGO_CHAOTIC             78
#define EGO_BLASTED             127
#define EGO_SHATTERED           126
#define EGO_FLAME               122
#define EGO_FROST               123
#define EGO_LIGHTNING_BOLT      121
#define EGO_FREE_ACTION         49
#define EGO_DF                  66
#define EGO_MOTION              59
#define EGO_SPECTRAL            102
#define EGO_NOLDOR              23
#define EGO_JUMP                15
#define EGO_SPINING             72
#define EGO_DRAGON              99
#define EGO_INST_DRAGONKIND     130
#define EGO_ENDURE_ELEC         17
#define EGO_ENDURE_ACID         16
#define EGO_ENDURE_FIRE         18
#define EGO_ENDURE_COLD         19
#define EGO_QUIET               58
#define EGO_WISDOM              25
#define EGO_RESIST_ELEC         6
#define EGO_RESIST_ACID         5
#define EGO_RESIST_FIRE         7
#define EGO_RESIST_COLD         8
#define EGO_LIFE                68
#define EGO_STEALTH             42
#define EGO_PROTECTION          41
#define EGO_MAGI                27
#define EGO_SPEED               60
#define EGO_RESISTANCE          9
#define EGO_LITE                32
#define EGO_AURA_FIRE           44
#define EGO_SLAYING_WEAPON      71
#define EGO_SLAYING             50
#define EGO_TELEPORTATION       35
#define EGO_ELVENKIND           10
#define EGO_LITE_MAGI           163
#define EGO_HA                  65

/* megahack */
#define EGO_CLOAK_LORDLY_RES	180 

/*** Object "tval" and "sval" codes ***/


/*
 * The values for the "tval" field of various objects.
 *
 * This value is the primary means by which items are sorted in the
 * player inventory, followed by "sval" and "cost".
 *
 * Note that a "BOW" with tval = 19 and sval S = 10*N+P takes a missile
 * weapon with tval = 16+N, and does (xP) damage when so combined.  This
 * fact is not actually used in the source, but it kind of interesting.
 *
 * Note that as of 2.7.8, the "item flags" apply to all items, though
 * only armor and weapons and a few other items use any of these flags.
 */
#if 0	// operation :)
#define TV_SKELETON      1	/* Skeletons ('s') */
#define TV_BOTTLE        2      /* Empty bottles ('!') */
#define TV_JUNK          3	/* Sticks, Pottery, etc ('~') */
#define TV_KEY		 4      /* Keys (';') */
#define TV_SPIKE         5	/* Spikes ('~') */
#define TV_GOLEM         6      /* Golem parts */
#define TV_CHEST         7	/* Chests ('~') */
#define TV_SHOT			16	/* Ammo for slings */
#define TV_ARROW        17	/* Ammo for bows */
#define TV_BOLT         18	/* Ammo for x-bows */
#define TV_BOW          19	/* Slings/Bows/Xbows */
#define TV_DIGGING      20	/* Shovels/Picks */
#define TV_HAFTED       21	/* Priest Weapons */
#define TV_POLEARM      22	/* Axes and Pikes */
#define TV_SWORD        23	/* Edged Weapons */
#define TV_BOOTS        30	/* Boots */
#define TV_GLOVES       31	/* Gloves */
#define TV_HELM         32	/* Helms */
#define TV_CROWN        33	/* Crowns */
#define TV_SHIELD       34	/* Shields */
#define TV_CLOAK        35	/* Cloaks */
#define TV_SOFT_ARMOR   36	/* Soft Armor */
#define TV_HARD_ARMOR   37	/* Hard Armor */
#define TV_DRAG_ARMOR	38	/* Dragon Scale Mail */
#define TV_LITE         39	/* Lites (including Specials) */
#define TV_AMULET       40	/* Amulets (including Specials) */
#define TV_RING         45	/* Rings (including Specials) */
#define TV_STAFF        55
#define TV_WAND         65
#define TV_ROD          66
#define TV_SCROLL       70
#define TV_POTION       75
#define TV_FLASK        77
#define TV_FOOD         80
#define TV_PSI_BOOK 	89
#define TV_MAGIC_BOOK   90
#define TV_PRAYER_BOOK  91
#define TV_SORCERY_BOOK 92
#define TV_FIGHT_BOOK 	93
#define TV_SHADOW_BOOK 	94
#define TV_HUNT_BOOK 	95
#define TV_GOLD         100	/* Gold can only be picked up by players */

#define TV_MAX		100
#endif	// 0

/* PernAngband ones */
#define TV_SKELETON      1      /* Skeletons ('s') */
#define TV_BOTTLE        2      /* Empty bottles ('!') */
#define TV_FIRESTONE     3      /* For DragonRiders */
#define TV_BATERIE       4      /* For the Alchemists */
#define TV_SPIKE         5      /* Spikes ('~') */
#define TV_MSTAFF        6      /* Mage Staffs */
#define TV_CHEST         7      /* Chests ('~') */
#define TV_PARCHEMENT    8      /* Parchements from Kamband */
#define TV_CORPSE        9      /* Monster corpses */
#define TV_EGG          10      /* Monster Eggs */
#define TV_JUNK         11      /* Sticks, Pottery, etc ('~') */
#define TV_TOOL         12      /* Tools */
#define TV_INSTRUMENT   14      /* Musical instruments */
#define TV_BOOMERANG    15      /* Boomerangs */
#define TV_SHOT         16      /* Ammo for slings */
#define TV_ARROW        17      /* Ammo for bows */
#define TV_BOLT         18      /* Ammo for x-bows */
#define TV_BOW          19      /* Slings/Bows/Xbows */
#define TV_DIGGING      20      /* Shovels/Picks */
#define TV_HAFTED       21      /* Priest Weapons */
#define TV_POLEARM      22      /* Pikes/Glaives/Spears/etc. */
#define TV_SWORD        23      /* Edged Weapons */
#define TV_AXE          24      /* Axes/Cleavers */
#define TV_BOOTS        30      /* Boots */
#define TV_GLOVES       31      /* Gloves */
#define TV_HELM         32      /* Helms */
#define TV_CROWN        33      /* Crowns */
#define TV_SHIELD       34      /* Shields */
#define TV_CLOAK        35      /* Cloaks */
#define TV_SOFT_ARMOR   36      /* Soft Armor */
#define TV_HARD_ARMOR   37      /* Hard Armor */
#define TV_DRAG_ARMOR   38      /* Dragon Scale Mail */
#define TV_LITE         39      /* Lites (including Specials) */
#define TV_AMULET       40      /* Amulets (including Specials) */
#define TV_RING         45      /* Rings (including Specials) */
#define TV_TRAPKIT      46      /* Trapkits */
#define TV_TOTEM        54      /* Summoner totems */
#define TV_STAFF        55
#define TV_WAND         65
#define TV_ROD          66
#define TV_ROD_MAIN     67
#define TV_SCROLL       70
#define TV_POTION       71
#define TV_POTION2      72      /* Second set of potion */
#define TV_FLASK        77
#define TV_FOOD         80
#define TV_HYPNOS       99      /* To wield monsters !:) */
#define TV_GOLD         100     /* Gold can only be picked up by players */
#define TV_RANDART      102     /* Random Artifacts */
#define TV_RUNE1        104      /* Base runes */
#define TV_RUNE2        105      /* Modifier runes */

#if 0	// we'll use PernM books :)
#define TV_VALARIN_BOOK 111
#define TV_MAGERY_BOOK  112
#define TV_SHADOW_BOOK  113
#define TV_CHAOS_BOOK   114
#define TV_NETHER_BOOK  115
#define TV_CRUSADE_BOOK 116
#define TV_SIGALDRY_BOOK 117
#define TV_SYMBIOTIC_BOOK 118
#define TV_MUSIC_BOOK   119
#define TV_MAGIC_BOOK   120
#define TV_PRAYER_BOOK  121
#define TV_ILLUSION_BOOK 122
#define TV_TRIBAL_BOOK  123
#define TV_DRUID_BOOK   124
#define TV_DAEMON_BOOK  125
#define TV_SPIRIT_BOOK  126
#endif	// 0

/* pernM ones (resurrected) */
#define TV_KEY		 51      /* Keys (';') */
#define TV_GOLEM        52       /* Golem parts */

#define TV_PSI_BOOK 	89
#define TV_MAGIC_BOOK   90
#define TV_PRAYER_BOOK  91
#define TV_SORCERY_BOOK 92
#define TV_FIGHT_BOOK 	93
#define TV_SHADOW_BOOK 	94
#define TV_HUNT_BOOK 	95

#define is_book(o_ptr) \
	(89 <= o_ptr->tval && o_ptr->tval <= 95)

/* Maximum "tval" */
#define TV_MAX		127


/* Sval for golems */
#define SV_GOLEM_WOOD           0
#define SV_GOLEM_COPPER         1
#define SV_GOLEM_IRON           2
#define SV_GOLEM_ALUM           3
#define SV_GOLEM_SILVER         4
#define SV_GOLEM_GOLD           5
#define SV_GOLEM_MITHRIL        6
#define SV_GOLEM_ADAM           7
#define SV_GOLEM_LEG            8
#define SV_GOLEM_ARM            9
#define SV_GOLEM_ATTACK         200
#define SV_GOLEM_FOLLOW         201
#define SV_GOLEM_GUARD          202

#if 0
/* The "sval" codes for TV_SHOT/TV_ARROW/TV_BOLT */
#define SV_AMMO_LIGHT		0	/* pebbles */
#define SV_AMMO_NORMAL		1	/* shots, arrows, bolts */
#define SV_AMMO_HEAVY		2	/* seeker arrows and bolts */
#define SV_AMMO_MAGIC		3	/* seeker arrows and bolts */

/* The "sval" codes for TV_BOW (note information in "sval") */
#define SV_SLING			2	/* (x2) */
#define SV_SHORT_BOW		12	/* (x2) */
#define SV_LONG_BOW			13	/* (x3) */
#define SV_LIGHT_XBOW		23	/* (x3) */
#define SV_HEAVY_XBOW		24	/* (x4) */

/* The "sval" codes for TV_DIGGING */
#define SV_SHOVEL			1
#define SV_GNOMISH_SHOVEL	2
#define SV_DWARVEN_SHOVEL	3
#define SV_PICK				4
#define SV_ORCISH_PICK		5
#define SV_DWARVEN_PICK		6

/* The "sval" values for TV_HAFTED */
#define SV_WHIP					2	/* 1d6 */
#define SV_QUARTERSTAFF			3	/* 1d9 */
#define SV_MSTAFF			4	/* 1d1 */
#define SV_MACE					5	/* 2d4 */
#define SV_BALL_AND_CHAIN		6	/* 2d4 */
#define SV_WAR_HAMMER			8	/* 3d3 */
#define SV_LUCERN_HAMMER		10	/* 2d5 */
#define SV_MORNING_STAR			12	/* 2d6 */
#define SV_FLAIL				13	/* 2d6 */
#define SV_LEAD_FILLED_MACE		15	/* 3d4 */
#define SV_TWO_HANDED_FLAIL		18	/* 3d6 */
#define SV_MACE_OF_DISRUPTION	20	/* 5d8 */
#define SV_GROND				50	/* 3d4 */

/* The "sval" values for TV_POLEARM */
#define SV_SPEAR				2	/* 1d6 */
#define SV_AWL_PIKE				4	/* 1d8 */
#define SV_TRIDENT				5	/* 1d9 */
#define SV_PIKE					8	/* 2d5 */
#define SV_BEAKED_AXE			10	/* 2d6 */
#define SV_BROAD_AXE			11	/* 2d6 */
#define SV_GLAIVE				13	/* 2d6 */
#define SV_HALBERD				15	/* 3d4 */
#define SV_SCYTHE				17	/* 5d3 */
#define SV_LANCE				20	/* 2d8 */
#define SV_BATTLE_AXE			22	/* 2d8 */
#define SV_GREAT_AXE			25	/* 4d4 */
#define SV_LOCHABER_AXE			28	/* 3d8 */
#define SV_SCYTHE_OF_SLICING	30	/* 8d4 */

/* The "sval" codes for TV_SWORD */
#define SV_BROKEN_DAGGER		1	/* 1d1 */
#define SV_BROKEN_SWORD			2	/* 1d2 */
#define SV_DAGGER				4	/* 1d4 */
#define SV_MAIN_GAUCHE			5	/* 1d5 */
#define SV_RAPIER				7	/* 1d6 */
#define SV_SMALL_SWORD			8	/* 1d6 */
#define SV_SHORT_SWORD			10	/* 1d7 */
#define SV_SABRE				11	/* 1d7 */
#define SV_CUTLASS				12	/* 1d7 */
#define SV_TULWAR				15	/* 2d4 */
#define SV_BROAD_SWORD			16	/* 2d5 */
#define SV_LONG_SWORD			17	/* 2d5 */
#define SV_SCIMITAR				18	/* 2d5 */
#define SV_KATANA				20	/* 3d4 */
#define SV_BASTARD_SWORD		21	/* 3d4 */
#define SV_TWO_HANDED_SWORD		25	/* 3d6 */
#define SV_EXECUTIONERS_SWORD	28	/* 4d5 */
#define SV_DARK_SWORD  			29	/* 3d7 */
#define SV_BLADE_OF_CHAOS		30	/* 6d5 */

/* The "sval" codes for TV_SHIELD */
#define SV_SMALL_LEATHER_SHIELD		2
#define SV_SMALL_METAL_SHIELD		3
#define SV_LARGE_LEATHER_SHIELD		4
#define SV_LARGE_METAL_SHIELD		5
#define SV_ORCISH_SHIELD                7
#define SV_SHIELD_OF_DEFLECTION		10

/* The "sval" codes for TV_HELM */
#define SV_HARD_LEATHER_CAP		2
#define SV_METAL_CAP			3
#define SV_IRON_HELM			5
#define SV_STEEL_HELM			6
#define SV_IRON_CROWN			10
#define SV_GOLDEN_CROWN			11
#define SV_JEWELED_CROWN		12
#define SV_MORGOTH				50

/* The "sval" codes for TV_BOOTS */
#define SV_PAIR_OF_SOFT_LEATHER_BOOTS	2
#define SV_PAIR_OF_HARD_LEATHER_BOOTS	3
#define SV_PAIR_OF_METAL_SHOD_BOOTS     6
#define SV_PAIR_OF_WITAN_BOOTS          8

/* The "sval" codes for TV_CLOAK */
#define SV_CLOAK					1
#define SV_KOLLA                                        3
#define SV_SHADOW_CLOAK				6

/* The "sval" codes for TV_GLOVES */
#define SV_SET_OF_LEATHER_GLOVES	1
#define SV_SET_OF_GAUNTLETS			2
#define SV_SET_OF_ELVEN_GLOVES			4
#define SV_SET_OF_CESTI				5

/* The "sval" codes for TV_SOFT_ARMOR */
#define SV_FILTHY_RAG				1
#define SV_ROBE						2
#define SV_SOFT_LEATHER_ARMOR		4
#define SV_SOFT_STUDDED_LEATHER		5
#define SV_HARD_LEATHER_ARMOR		6
#define SV_HARD_STUDDED_LEATHER		7
#define SV_LEATHER_SCALE_MAIL		11

/* The "sval" codes for TV_HARD_ARMOR */
#define SV_RUSTY_CHAIN_MAIL			1	/* 14- */
#define SV_METAL_SCALE_MAIL			3	/* 13 */
#define SV_CHAIN_MAIL				4	/* 14 */
#define SV_AUGMENTED_CHAIN_MAIL		6	/* 16 */
#define SV_DOUBLE_CHAIN_MAIL		7	/* 16 */
#define SV_BAR_CHAIN_MAIL			8	/* 18 */
#define SV_METAL_BRIGANDINE_ARMOUR	9	/* 19 */
#define SV_PARTIAL_PLATE_ARMOUR		12	/* 22 */
#define SV_METAL_LAMELLAR_ARMOUR	13	/* 23 */
#define SV_FULL_PLATE_ARMOUR		15	/* 25 */
#define SV_RIBBED_PLATE_ARMOUR		18	/* 28 */
#define SV_MITHRIL_CHAIN_MAIL		20	/* 28+ */
#define SV_MITHRIL_PLATE_MAIL		25	/* 35+ */
#define SV_ADAMANTITE_PLATE_MAIL	30	/* 40+ */

/* The "sval" codes for TV_DRAG_ARMOR */
#define SV_DRAGON_BLACK			1
#define SV_DRAGON_BLUE			2
#define SV_DRAGON_WHITE			3
#define SV_DRAGON_RED			4
#define SV_DRAGON_GREEN			5
#define SV_DRAGON_MULTIHUED		6
#define SV_DRAGON_SHINING		10
#define SV_DRAGON_LAW			12
#define SV_DRAGON_BRONZE		14
#define SV_DRAGON_GOLD			16
#define SV_DRAGON_CHAOS			18
#define SV_DRAGON_BALANCE		20
#define SV_DRAGON_POWER			30

/* The sval codes for TV_LITE */
#define SV_LITE_TORCH		0
#define SV_LITE_LANTERN		1
#define SV_LITE_DWARVEN		2
#define SV_LITE_FEANOR		3
#define SV_LITE_GALADRIEL	4
#define SV_LITE_ELENDIL		5
#define SV_LITE_THRAIN		6

/* The "sval" codes for TV_AMULET */
#define SV_AMULET_DOOM			0
#define SV_AMULET_TELEPORT		1
#define SV_AMULET_ADORNMENT		2
#define SV_AMULET_SLOW_DIGEST	3
#define SV_AMULET_RESIST_ACID	4
#define SV_AMULET_SEARCHING		5
#define SV_AMULET_WISDOM		6
#define SV_AMULET_CHARISMA		7
#define SV_AMULET_THE_MAGI		8
#define SV_AMULET_THE_MOON              9
#define SV_AMULET_CARLAMMAS		10
#define SV_AMULET_INGWE			11
#define SV_AMULET_DWARVES		12
#define SV_AMULET_TERKEN		13
#define SV_AMULET_SPEED			14
#define SV_AMULET_LIFE                  15

/* The sval codes for TV_RING */
#define SV_RING_WOE				0
#define SV_RING_AGGRAVATION		1
#define SV_RING_WEAKNESS		2
#define SV_RING_STUPIDITY		3
#define SV_RING_TELEPORTATION	4
#define SV_RING_POLYMORPH	5
#define SV_RING_SLOW_DIGESTION	6
#define SV_RING_FEATHER_FALL	7
#define SV_RING_RESIST_FIRE		8
#define SV_RING_RESIST_COLD		9
#define SV_RING_SUSTAIN_STR		10
#define SV_RING_SUSTAIN_INT		11
#define SV_RING_SUSTAIN_WIS		12
#define SV_RING_SUSTAIN_DEX		13
#define SV_RING_SUSTAIN_CON		14
#define SV_RING_SUSTAIN_CHR		15
#define SV_RING_PROTECTION		16
#define SV_RING_ACID			17
#define SV_RING_FLAMES			18
#define SV_RING_ICE				19
#define SV_RING_RESIST_POIS		20
#define SV_RING_FREE_ACTION		21
#define SV_RING_SEE_INVIS		22
#define SV_RING_SEARCHING		23
#define SV_RING_STR				24
#define SV_RING_INT				25
#define SV_RING_DEX				26
#define SV_RING_CON				27
#define SV_RING_ACCURACY		28
#define SV_RING_DAMAGE			29
#define SV_RING_SLAYING			30
#define SV_RING_SPEED			31
#define SV_RING_BARAHIR			32
#define SV_RING_TULKAS			33
#define SV_RING_NARYA			34
#define SV_RING_NENYA			35
#define SV_RING_VILYA			36
#define SV_RING_POWER			37




/* The "sval" codes for TV_STAFF */
#define SV_STAFF_DARKNESS		0
#define SV_STAFF_SLOWNESS		1
#define SV_STAFF_HASTE_MONSTERS	2
#define SV_STAFF_SUMMONING		3
#define SV_STAFF_TELEPORTATION	4
#define SV_STAFF_IDENTIFY		5
#define SV_STAFF_REMOVE_CURSE	6
#define SV_STAFF_STARLITE		7
#define SV_STAFF_LITE			8
#define SV_STAFF_MAPPING		9
#define SV_STAFF_DETECT_GOLD	10
#define SV_STAFF_DETECT_ITEM	11
#define SV_STAFF_DETECT_TRAP	12
#define SV_STAFF_DETECT_DOOR	13
#define SV_STAFF_DETECT_INVIS	14
#define SV_STAFF_DETECT_EVIL	15
#define SV_STAFF_CURE_LIGHT		16
#define SV_STAFF_CURING			17
#define SV_STAFF_HEALING		18
#define SV_STAFF_THE_MAGI		19
#define SV_STAFF_SLEEP_MONSTERS	20
#define SV_STAFF_SLOW_MONSTERS	21
#define SV_STAFF_SPEED			22
#define SV_STAFF_PROBING		23
#define SV_STAFF_DISPEL_EVIL	24
#define SV_STAFF_POWER			25
#define SV_STAFF_HOLINESS		26
#define SV_STAFF_GENOCIDE		27
#define SV_STAFF_EARTHQUAKES	28
#define SV_STAFF_DESTRUCTION	29

/* jk - the first valuable staff (for TRAP_OF_WASTING_WANDS) */
#define SV_STAFF_NASTY_STAFF              4

/* The "sval" codes for TV_WAND */
#define SV_WAND_HEAL_MONSTER	0
#define SV_WAND_HASTE_MONSTER	1
#define SV_WAND_CLONE_MONSTER	2
#define SV_WAND_TELEPORT_AWAY	3
#define SV_WAND_DISARMING		4
#define SV_WAND_TRAP_DOOR_DEST	5
#define SV_WAND_STONE_TO_MUD	6
#define SV_WAND_LITE			7
#define SV_WAND_SLEEP_MONSTER	8
#define SV_WAND_SLOW_MONSTER	9
#define SV_WAND_CONFUSE_MONSTER	10
#define SV_WAND_FEAR_MONSTER	11
#define SV_WAND_DRAIN_LIFE		12
#define SV_WAND_POLYMORPH		13
#define SV_WAND_STINKING_CLOUD	14
#define SV_WAND_MAGIC_MISSILE	15
#define SV_WAND_ACID_BOLT		16
#define SV_WAND_ELEC_BOLT		17
#define SV_WAND_FIRE_BOLT		18
#define SV_WAND_COLD_BOLT		19
#define SV_WAND_ACID_BALL		20
#define SV_WAND_ELEC_BALL		21
#define SV_WAND_FIRE_BALL		22
#define SV_WAND_COLD_BALL		23
#define SV_WAND_WONDER			24
#define SV_WAND_ANNIHILATION	25
#define SV_WAND_DRAGON_FIRE		26
#define SV_WAND_DRAGON_COLD		27
#define SV_WAND_DRAGON_BREATH	28

/* jk - the first valuable wand (for TRAP_OF_WASTING_WANDS) */
#define SV_WAND_NASTY_WAND               3

/* The "sval" codes for TV_ROD */
#define SV_ROD_DETECT_TRAP		0
#define SV_ROD_DETECT_DOOR		1
#define SV_ROD_IDENTIFY			2
#define SV_ROD_RECALL			3
#define SV_ROD_ILLUMINATION		4
#define SV_ROD_MAPPING			5
#define SV_ROD_DETECTION		6
#define SV_ROD_PROBING			7
#define SV_ROD_CURING			8
#define SV_ROD_HEALING			9
#define SV_ROD_RESTORATION		10
#define SV_ROD_SPEED			11
/* xxx (aimed) */
#define SV_ROD_TELEPORT_AWAY	13
#define SV_ROD_DISARMING		14
#define SV_ROD_LITE				15
#define SV_ROD_SLEEP_MONSTER	16
#define SV_ROD_SLOW_MONSTER		17
#define SV_ROD_DRAIN_LIFE		18
#define SV_ROD_POLYMORPH		19
#define SV_ROD_ACID_BOLT		20
#define SV_ROD_ELEC_BOLT		21
#define SV_ROD_FIRE_BOLT		22
#define SV_ROD_COLD_BOLT		23
#define SV_ROD_ACID_BALL		24
#define SV_ROD_ELEC_BALL		25
#define SV_ROD_FIRE_BALL		26
#define SV_ROD_COLD_BALL		27


/* The "sval" codes for TV_SCROLL */

#define SV_SCROLL_DARKNESS				0
#define SV_SCROLL_AGGRAVATE_MONSTER		1
#define SV_SCROLL_CURSE_ARMOR			2
#define SV_SCROLL_CURSE_WEAPON			3
#define SV_SCROLL_SUMMON_MONSTER		4
#define SV_SCROLL_SUMMON_UNDEAD			5
#define SV_SCROLL_ARTIFACT_CREATION             6
#define SV_SCROLL_TRAP_CREATION		 	7
#define SV_SCROLL_PHASE_DOOR		   	8
#define SV_SCROLL_TELEPORT				9
#define SV_SCROLL_TELEPORT_LEVEL		10
#define SV_SCROLL_WORD_OF_RECALL		11
#define SV_SCROLL_IDENTIFY				12
#define SV_SCROLL_STAR_IDENTIFY			13
#define SV_SCROLL_REMOVE_CURSE			14
#define SV_SCROLL_STAR_REMOVE_CURSE		15
#define SV_SCROLL_ENCHANT_ARMOR			16
#define SV_SCROLL_ENCHANT_WEAPON_TO_HIT	17
#define SV_SCROLL_ENCHANT_WEAPON_TO_DAM	18
#define SV_SCROLL_BLOOD_BOND			19
#define SV_SCROLL_STAR_ENCHANT_ARMOR	20
#define SV_SCROLL_STAR_ENCHANT_WEAPON	21
#define SV_SCROLL_RECHARGING			22
#define SV_SCROLL_GOLEM                         23
#define SV_SCROLL_LIGHT					24
#define SV_SCROLL_MAPPING				25
#define SV_SCROLL_DETECT_GOLD			26
#define SV_SCROLL_DETECT_ITEM			27
#define SV_SCROLL_DETECT_TRAP			28
#define SV_SCROLL_DETECT_DOOR			29
#define SV_SCROLL_DETECT_INVIS			30
/* xxx (detect evil?) */
#define SV_SCROLL_SATISFY_HUNGER		32
#define SV_SCROLL_BLESSING				33
#define SV_SCROLL_HOLY_CHANT			34
#define SV_SCROLL_HOLY_PRAYER			35
#define SV_SCROLL_MONSTER_CONFUSION		36
#define SV_SCROLL_PROTECTION_FROM_EVIL	37
#define SV_SCROLL_RUNE_OF_PROTECTION	38
#define SV_SCROLL_TRAP_DOOR_DESTRUCTION	39
/* xxx */
#define SV_SCROLL_STAR_DESTRUCTION		41
#define SV_SCROLL_DISPEL_UNDEAD			42
/* xxx */
#define SV_SCROLL_GENOCIDE				44
#define SV_SCROLL_MASS_GENOCIDE			45
#define SV_SCROLL_ACQUIREMENT			46
#define SV_SCROLL_STAR_ACQUIREMENT		47
#define SV_SCROLL_LIFE				48
#define SV_SCROLL_HOUSE				49


/* The "sval" codes for TV_POTION */
#define SV_POTION_WATER				0
#define SV_POTION_APPLE_JUICE		1
#define SV_POTION_SLIME_MOLD		2
/* xxx (fixed color) */
#define SV_POTION_SLOWNESS			4
#define SV_POTION_SALT_WATER		5
#define SV_POTION_POISON			6
#define SV_POTION_BLINDNESS			7
/* xxx */
#define SV_POTION_CONFUSION			9
/* xxx */
#define SV_POTION_SLEEP				11
/* xxx */
#define SV_POTION_LOSE_MEMORIES		13
/* xxx */
#define SV_POTION_RUINATION			15
#define SV_POTION_DEC_STR			16
#define SV_POTION_DEC_INT			17
#define SV_POTION_DEC_WIS			18
#define SV_POTION_DEC_DEX			19
#define SV_POTION_DEC_CON			20
#define SV_POTION_DEC_CHR			21
#define SV_POTION_DETONATIONS		22
#define SV_POTION_DEATH				23
#define SV_POTION_INFRAVISION		24
#define SV_POTION_DETECT_INVIS		25
#define SV_POTION_SLOW_POISON		26
#define SV_POTION_CURE_POISON		27
#define SV_POTION_BOLDNESS			28
#define SV_POTION_SPEED				29
#define SV_POTION_RESIST_HEAT		30
#define SV_POTION_RESIST_COLD		31
#define SV_POTION_HEROISM			32
#define SV_POTION_BESERK_STRENGTH	33
#define SV_POTION_CURE_LIGHT		34
#define SV_POTION_CURE_SERIOUS		35
#define SV_POTION_CURE_CRITICAL		36
#define SV_POTION_HEALING			37
#define SV_POTION_STAR_HEALING		38
#define SV_POTION_LIFE				39
#define SV_POTION_RESTORE_MANA		40
#define SV_POTION_RESTORE_EXP		41
#define SV_POTION_RES_STR			42
#define SV_POTION_RES_INT			43
#define SV_POTION_RES_WIS			44
#define SV_POTION_RES_DEX			45
#define SV_POTION_RES_CON			46
#define SV_POTION_RES_CHR			47
#define SV_POTION_INC_STR			48
#define SV_POTION_INC_INT			49
#define SV_POTION_INC_WIS			50
#define SV_POTION_INC_DEX			51
#define SV_POTION_INC_CON			52
#define SV_POTION_INC_CHR			53
/* xxx */
#define SV_POTION_AUGMENTATION			55
#define SV_POTION_ENLIGHTENMENT			56
#define SV_POTION_STAR_ENLIGHTENMENT	57
#define SV_POTION_SELF_KNOWLEDGE		58
#define SV_POTION_EXPERIENCE			59
#define SV_POTION_INVIS					60

/* The "sval" codes for TV_FOOD */
#define SV_FOOD_POISON			0
#define SV_FOOD_BLINDNESS		1
#define SV_FOOD_PARANOIA		2
#define SV_FOOD_CONFUSION		3
#define SV_FOOD_HALLUCINATION	4
#define SV_FOOD_PARALYSIS		5
#define SV_FOOD_WEAKNESS		6
#define SV_FOOD_SICKNESS		7
#define SV_FOOD_STUPIDITY		8
#define SV_FOOD_NAIVETY			9
#define SV_FOOD_UNHEALTH		10
#define SV_FOOD_DISEASE			11
#define SV_FOOD_CURE_POISON		12
#define SV_FOOD_CURE_BLINDNESS	13
#define SV_FOOD_CURE_PARANOIA	14
#define SV_FOOD_CURE_CONFUSION	15
#define SV_FOOD_CURE_SERIOUS	16
#define SV_FOOD_RESTORE_STR		17
#define SV_FOOD_RESTORE_CON		18
#define SV_FOOD_RESTORING		19
/* many missing mushrooms */

/* crops */
#define	SV_FOOD_POTATO			20
#define SV_FOOD_HEAD_OF_CABBAGE		21
#define SV_FOOD_CARROT			22
#define SV_FOOD_BEET			23
#define	SV_FOOD_SQUASH			24
#define	SV_FOOD_EAR_OF_CORN		25

#define SV_FOOD_BISCUIT			32
#define SV_FOOD_JERKY			33
#define SV_FOOD_RATION			35
#define SV_FOOD_SLIME_MOLD		36
#define SV_FOOD_WAYBREAD		37
#define SV_FOOD_PINT_OF_ALE		38
#define SV_FOOD_PINT_OF_WINE		39
#define SV_FOOD_FORTUNE_COOKIE	42

#endif	// 0

/* 'resurrected' ones */
/* rearrangement is needed maybe.. */
#define SV_FOOD_UNMAGIC			50

#define	SV_FOOD_POTATO			20
#define SV_FOOD_HEAD_OF_CABBAGE		21
#define SV_FOOD_CARROT			22
#define SV_FOOD_BEET			23
#define	SV_FOOD_SQUASH			24
#define	SV_FOOD_EAR_OF_CORN		25


#define SV_RING_POLYMORPH	60
#define SV_RING_STEALTH		61

#define SV_SCROLL_ARTIFACT_CREATION             52
#define SV_SCROLL_GOLEM                         55
#define SV_SCROLL_LIFE				56	
#define SV_SCROLL_HOUSE				57
#define SV_SCROLL_BLOOD_BOND			58

#define SV_WAND_ELEC_BOLT		33

/* those items need some reworking. */
#define SV_ORCISH_SHIELD                7
#define SV_KOLLA                                        7
#define SV_PAIR_OF_WITAN_BOOTS          8
#define SV_AMULET_TERKEN		30
#define SV_AMULET_SPEED			31
#define SV_SET_OF_ELVEN_GLOVES			4
#define SV_AMULET_LIFE                  32	// 'Immortality'
//#define SV_AMULET_THE_MAGI		8
#define SV_AMULET_THE_MOON              33
//#define SV_AMULET_DOOM			0
#define SV_AMULET_SUSPICION		34
#define SV_AMULET_LIFE_SAVING	35

/*
 * Special "sval" limit -- first "normal" food
 */
#define SV_FOOD_MIN_FOOD	20
//#define SV_FOOD_MIN_FOOD	32
#define SV_FOOD_MAX_FOOD    49

/*
 * Special "sval" limit -- first "aimed" rod
 */
#define SV_ROD_MIN_DIRECTION	12

/*
 * Special "sval" limit -- first "large" chest
 */
#define SV_CHEST_MIN_LARGE	4

/*
 * Special "sval" limit -- first "good" magic/prayer book
 */
#define SV_BOOK_MIN_GOOD	4

/*
 * Special "sval" limit -- last gold
 */
#define SV_GOLD_MAX			18


/* from PernAngband */

/* The "sval" codes for TV_TOOL */
#define SV_TOOL_CLIMB 0
#define SV_PORTABLE_HOLE 1

/* The "sval" codes for TV_MSTAFF */
#define SV_MSTAFF 1

/* The "sval" codes for TV_FIRESTONE */
#define SV_FIRESTONE  3
#define SV_FIRE_SMALL 6

/* The "sval" codes for TV_SHOT/TV_ARROW/TV_BOLT */
#define SV_AMMO_LIGHT                    0	/* pebbles */
#define SV_AMMO_NORMAL                   1	/* shots, arrows, bolts */
#define SV_AMMO_HEAVY                    2	/* seeker arrows and bolts, mithril shots */
/* (pernM ammo) */
#define SV_AMMO_MAGIC		3	/* seeker arrows and bolts */
#define SV_AMMO_SILVER		4	/* silver arrows and bolts */

/* The "sval" codes for TV_INSTRUMENT */
#define SV_FLUTE                         1
#define SV_BANJO                         2
#define SV_LUTE                          3
#define SV_MANDOLIN                      4
#define SV_DRUM                          5
#define SV_HARP                          6
#define SV_HORN                          7

/* The "sval" codes for TV_TRAPKIT */
#define SV_TRAPKIT_SLING                 1
#define SV_TRAPKIT_BOW                   2
#define SV_TRAPKIT_XBOW                  3
#define SV_TRAPKIT_POTION                4
#define SV_TRAPKIT_SCROLL                5
#define SV_TRAPKIT_DEVICE                6

/* The "sval" codes for TV_BOOMERANG */
#define SV_BOOM_S_WOOD                   1      /* 1d4  */
#define SV_BOOM_WOOD                     2      /* 1d9  */
#define SV_BOOM_S_METAL                  3      /* 1d8  */
#define SV_BOOM_METAL                    4      /* 2d4  */

/* The "sval" codes for TV_BOW (note information in "sval") */
#define SV_SLING                         2	/* (x2) */
#define SV_SHORT_BOW                    12	/* (x2) */
#define SV_LONG_BOW                     13	/* (x3) */
#define SV_LIGHT_XBOW                   23	/* (x3) */
#define SV_HEAVY_XBOW                   24	/* (x4) */

/* The "sval" codes for TV_DIGGING */
#define SV_SHOVEL                        1
#define SV_GNOMISH_SHOVEL                2
#define SV_DWARVEN_SHOVEL                3
#define SV_PICK                          4
#define SV_ORCISH_PICK                   5
#define SV_DWARVEN_PICK                  6
#define SV_MATTOCK                       7

/* The "sval" values for TV_HAFTED */
#define SV_CLUB                          1	/* 1d4  */
#define SV_WHIP                          2	/* 1d6  */
#define SV_QUARTERSTAFF                  3	/* 1d9  */
#define SV_NUNCHAKU                      4	/* 2d3  */
#define SV_MACE                          5	/* 2d4  */
#define SV_BALL_AND_CHAIN                6	/* 2d4  */
#define SV_WAR_HAMMER                    8	/* 3d3  */
#define SV_LUCERN_HAMMER                10	/* 2d5  */
#define SV_THREE_PIECE_ROD              11	/* 3d3  */
#define SV_MORNING_STAR                 12	/* 2d6  */
#define SV_FLAIL                        13	/* 2d6  */
#define SV_LEAD_FILLED_MACE             15	/* 3d4  */
#define SV_TWO_HANDED_FLAIL             18	/* 3d6  */
#define SV_GREAT_HAMMER                 19	/* 4d6  */
#define SV_MACE_OF_DISRUPTION           20	/* 5d8  */
#define SV_GROND                        50	/* 3d4  */

/* The "sval" values for TV_AXE */
#define SV_HATCHET                       1	/* 1d5 */
#define SV_CLEAVER                       2      /* 2d4 */
#define SV_LIGHT_WAR_AXE                 8      /* 2d5 */
#define SV_BEAKED_AXE                   10	/* 2d6 */
#define SV_BROAD_AXE                    11	/* 2d6 */
#define SV_BATTLE_AXE                   22	/* 2d8 */
#define SV_GREAT_AXE                    25	/* 4d4 */
#define SV_LOCHABER_AXE                 28	/* 3d8 */
#define SV_SLAUGHTER_AXE                30      /* 5d7 */

/* The "sval" values for TV_POLEARM */
#define SV_SPEAR                         2	/* 1d6 */
#define SV_SICKLE                        3	/* 2d3 */
#define SV_AWL_PIKE                      4	/* 1d8 */
#define SV_TRIDENT                       5	/* 1d9 */
#define SV_FAUCHARD                      6  /* 1d10 */
#define SV_BROAD_SPEAR                   7	/* 1d9 */
#define SV_PIKE                          8	/* 2d5 */
#define SV_GLAIVE                       13	/* 2d6 */
#define SV_HALBERD                      15	/* 3d4 */
#define SV_GUISARME                     16  /* 2d5 */
#define SV_SCYTHE                       17	/* 5d3 */
#define SV_LANCE                        20	/* 2d8 */
#define SV_TRIFURCATE_SPEAR             26	/* 2d9 */
#define SV_HEAVY_LANCE                  29  /* 4d8 */
#define SV_SCYTHE_OF_SLICING            30	/* 8d4 */

/* The "sval" codes for TV_SWORD */
#define SV_BROKEN_DAGGER                 1  /* 1d1 */
#define SV_BROKEN_SWORD                  2  /* 1d2 */
#define SV_DAGGER                        4  /* 1d4 */
#define SV_MAIN_GAUCHE                   5  /* 1d5 */
#define SV_RAPIER                        7  /* 1d6 */
#define SV_SMALL_SWORD                   8  /* 1d6 */
#define SV_BASILLARD                     9  /* 1d8 */
#define SV_SHORT_SWORD                  10  /* 1d7 */
#define SV_SABRE                        11  /* 1d7 */
#define SV_CUTLASS                      12  /* 1d7 */
#define SV_KHOPESH                      14  /* 2d4 */
#define SV_TULWAR                       15  /* 2d4 */
#define SV_BROAD_SWORD                  16  /* 2d5 */
#define SV_LONG_SWORD                   17  /* 2d5 */
#define SV_SCIMITAR                     18  /* 2d5 */
#define SV_KATANA                       20  /* 3d4 */
#define SV_BASTARD_SWORD                21  /* 3d4 */
#define SV_GREAT_SCIMITAR               22  /* 4d5 */
#define SV_CLAYMORE                     23  /* 2d8 */
#define SV_ESPADON                      24  /* 2d9 */
#define SV_TWO_HANDED_SWORD             25  /* 3d6 */
#define SV_FLAMBERGE                    26  /* 3d7 */
#define SV_EXECUTIONERS_SWORD           28  /* 4d5 */
#define SV_ZWEIHANDER                   29  /* 4d6 */
#define SV_BLADE_OF_CHAOS               30  /* 6d5 */
#define SV_SHADOW_BLADE                 31  /* 4d4 */
#define SV_BLUESTEEL_BLADE              32  /* 3d9 */
#define SV_DARK_SWORD                   33  /* 3d7 */

/* The "sval" codes for TV_SHIELD */
#define SV_SMALL_LEATHER_SHIELD          2
#define SV_SMALL_METAL_SHIELD            3
#define SV_LARGE_LEATHER_SHIELD          4
#define SV_LARGE_METAL_SHIELD            5
#define SV_DRAGON_SHIELD                 6
#define SV_SHIELD_OF_DEFLECTION         10

/* The "sval" codes for TV_HELM */
#define SV_HARD_LEATHER_CAP              2
#define SV_METAL_CAP                     3
#define SV_IRON_HELM                     5
#define SV_STEEL_HELM                    6
#define SV_DRAGON_HELM                   7
#define SV_IRON_CROWN                   10
#define SV_GOLDEN_CROWN                 11
#define SV_JEWELED_CROWN                12
#define SV_MORGOTH                      50

/* The "sval" codes for TV_BOOTS */
#define SV_PAIR_OF_SOFT_LEATHER_BOOTS    2
#define SV_PAIR_OF_HARD_LEATHER_BOOTS    3
#define SV_PAIR_OF_METAL_SHOD_BOOTS      6

/* The "sval" codes for TV_CLOAK */
#define SV_CLOAK                         1
#define SV_ELVEN_CLOAK                   2
#define SV_FUR_CLOAK                     3
#define SV_SHADOW_CLOAK                  6

/* The "sval" codes for TV_GLOVES */
#define SV_SET_OF_LEATHER_GLOVES         1
#define SV_SET_OF_GAUNTLETS              2
#define SV_SET_OF_CESTI                  5

/* The "sval" codes for TV_SOFT_ARMOR */
#define SV_FILTHY_RAG                    1
#define SV_ROBE                          2
#define SV_PAPER_ARMOR                   3  /* 4 */
#define SV_SOFT_LEATHER_ARMOR            4
#define SV_SOFT_STUDDED_LEATHER          5
#define SV_HARD_LEATHER_ARMOR            6
#define SV_HARD_STUDDED_LEATHER          7
#define SV_RHINO_HIDE_ARMOR              8
#define SV_CORD_ARMOR                    9  /*  6 */
#define SV_PADDED_ARMOR                 10  /*  4 */
#define SV_LEATHER_SCALE_MAIL           11
#define SV_LEATHER_JACK                 12
#define SV_STONE_AND_HIDE_ARMOR         15  /* 15 */
#define SV_DRAGONRIDER_SUIT             16

/* The "sval" codes for TV_HARD_ARMOR */
#define SV_RUSTY_CHAIN_MAIL              1  /* 14- */
#define SV_RING_MAIL                     2  /* 12  */
#define SV_METAL_SCALE_MAIL              3  /* 13  */
#define SV_CHAIN_MAIL                    4  /* 14  */
#define SV_DOUBLE_RING_MAIL              5  /* 15  */
#define SV_AUGMENTED_CHAIN_MAIL          6  /* 16  */
#define SV_DOUBLE_CHAIN_MAIL             7  /* 16  */
#define SV_BAR_CHAIN_MAIL                8  /* 18  */
#define SV_METAL_BRIGANDINE_ARMOUR       9  /* 19  */
#define SV_SPLINT_MAIL                  10  /* 19  */
#define SV_PARTIAL_PLATE_ARMOUR         12  /* 22  */
#define SV_METAL_LAMELLAR_ARMOUR        13  /* 23  */
#define SV_FULL_PLATE_ARMOUR            15  /* 25  */
#define SV_RIBBED_PLATE_ARMOUR          18  /* 28  */
#define SV_MITHRIL_CHAIN_MAIL           20  /* 28+ */
#define SV_MITHRIL_PLATE_MAIL           25  /* 35+ */
#define SV_ADAMANTITE_PLATE_MAIL        30  /* 40+ */

/* The "sval" codes for TV_DRAG_ARMOR */
#define SV_DRAGON_BLACK                  1
#define SV_DRAGON_BLUE                   2
#define SV_DRAGON_WHITE                  3
#define SV_DRAGON_RED                    4
#define SV_DRAGON_GREEN                  5
#define SV_DRAGON_MULTIHUED              6
#define SV_DRAGON_SHINING               10
#define SV_DRAGON_LAW                   12
#define SV_DRAGON_BRONZE                14
#define SV_DRAGON_GOLD                  16
#define SV_DRAGON_CHAOS                 18
#define SV_DRAGON_BALANCE               20
#define SV_DRAGON_POWER                 30

/* The sval codes for TV_LITE */
#define SV_LITE_TORCH                    0
#define SV_LITE_LANTERN                  1
#define SV_LITE_TORCH_EVER               2
#define SV_LITE_DWARVEN                  3
#define SV_LITE_FEANORIAN                4
#define SV_LITE_GALADRIEL                100
#define SV_LITE_ELENDIL                  101
#define SV_LITE_THRAIN                   102
#define SV_LITE_UNDEATH                  103
#define SV_LITE_PALANTIR                 104
#define SV_ANCHOR_SPACETIME              105
#define SV_STONE_LORE                    106


/* The "sval" codes for TV_AMULET */
#define SV_AMULET_DOOM                   0
#define SV_AMULET_TELEPORT               1
#define SV_AMULET_ADORNMENT              2
#define SV_AMULET_SLOW_DIGEST            3
#define SV_AMULET_RESIST_ACID            4
#define SV_AMULET_SEARCHING              5
#define SV_AMULET_BRILLANCE              6
#define SV_AMULET_CHARISMA               7
#define SV_AMULET_THE_MAGI               8
#define SV_AMULET_REFLECTION             9
#define SV_AMULET_CARLAMMAS             10
#define SV_AMULET_INGWE                 11
#define SV_AMULET_DWARVES               12
#define SV_AMULET_NO_MAGIC              13
#define SV_AMULET_NO_TELE               14
#define SV_AMULET_RESISTANCE            15
#define SV_AMULET_NOTHING               16
#define SV_AMULET_SERPENT               17
#define SV_AMULET_TORIS_MEJISTOS        18
#define SV_AMULET_TRICKERY              23
#define SV_AMULET_DEVOTION              25
#define SV_AMULET_WEAPONMASTERY         24
#define SV_AMULET_WISDOM                28
#define SV_AMULET_INFRA                 26

/* The sval codes for TV_RING */
#define SV_RING_WOE                      0
#define SV_RING_AGGRAVATION              1
#define SV_RING_WEAKNESS                 2
#define SV_RING_STUPIDITY                3
#define SV_RING_TELEPORTATION            4
#define SV_RING_SPECIAL                  5
#define SV_RING_SLOW_DIGESTION           6
#define SV_RING_FEATHER_FALL             7
#define SV_RING_RESIST_FIRE              8
#define SV_RING_RESIST_COLD              9
#define SV_RING_SUSTAIN_STR             10
#define SV_RING_SUSTAIN_INT             11
#define SV_RING_SUSTAIN_WIS             12
#define SV_RING_SUSTAIN_DEX             13
#define SV_RING_SUSTAIN_CON             14
#define SV_RING_SUSTAIN_CHR             15
#define SV_RING_PROTECTION              16
#define SV_RING_ACID                    17
#define SV_RING_FLAMES                  18
#define SV_RING_ICE                     19
#define SV_RING_RESIST_POIS             20
#define SV_RING_FREE_ACTION             21
#define SV_RING_SEE_INVIS               22
#define SV_RING_SEARCHING               23
#define SV_RING_STR                     24
#define SV_RING_INT                     25
#define SV_RING_DEX                     26
#define SV_RING_CON                     27
#define SV_RING_ACCURACY                28
#define SV_RING_DAMAGE                  29
#define SV_RING_SLAYING                 30
#define SV_RING_SPEED                   31
#define SV_RING_BARAHIR                 32
#define SV_RING_TULKAS                  33
#define SV_RING_NARYA                   34
#define SV_RING_NENYA                   35
#define SV_RING_VILYA                   36
#define SV_RING_POWER                   37
#define SV_RING_RES_FEAR                38
#define SV_RING_RES_LD                  39
#define SV_RING_RES_NETHER              40
#define SV_RING_RES_NEXUS               41
#define SV_RING_RES_SOUND               42
#define SV_RING_RES_CONFUSION           43
#define SV_RING_RES_SHARDS              44
#define SV_RING_RES_DISENCHANT          45
#define SV_RING_RES_CHAOS               46
#define SV_RING_RES_BLINDNESS           47
#define SV_RING_LORDLY                  48
#define SV_RING_ATTACKS                 49
#define SV_RING_NOTHING                 50
#define SV_RING_PRECONITION             51
#define SV_RING_FLAR                    52
#define SV_RING_INVIS                   53
#define SV_RING_FLYING                  54
#define SV_RING_WRAITH                  55
#define SV_RING_ELEC                    56
#define SV_RING_CRIT                    57

/* The "sval" codes for TV_STAFF */
#define SV_STAFF_DARKNESS                0
#define SV_STAFF_SLOWNESS                1
#define SV_STAFF_HASTE_MONSTERS          2
#define SV_STAFF_SUMMONING               3
#define SV_STAFF_TELEPORTATION           4
#define SV_STAFF_IDENTIFY                5
#define SV_STAFF_REMOVE_CURSE            6
#define SV_STAFF_STARLITE                7
#define SV_STAFF_LITE                    8
#define SV_STAFF_MAPPING                 9
#define SV_STAFF_DETECT_GOLD            10
#define SV_STAFF_DETECT_ITEM            11
#define SV_STAFF_DETECT_TRAP            12
#define SV_STAFF_DETECT_DOOR            13
#define SV_STAFF_DETECT_INVIS           14
#define SV_STAFF_DETECT_EVIL            15
#define SV_STAFF_CURE_LIGHT             16
#define SV_STAFF_CURING                 17
#define SV_STAFF_HEALING                18
#define SV_STAFF_THE_MAGI               19
#define SV_STAFF_SLEEP_MONSTERS         20
#define SV_STAFF_SLOW_MONSTERS          21
#define SV_STAFF_SPEED                  22
#define SV_STAFF_PROBING                23
#define SV_STAFF_DISPEL_EVIL            24
#define SV_STAFF_POWER                  25
#define SV_STAFF_HOLINESS               26
#define SV_STAFF_GENOCIDE               27
#define SV_STAFF_EARTHQUAKES            28
#define SV_STAFF_DESTRUCTION            29
#define SV_STAFF_NOTHING                30
#define SV_STAFF_WISHING                31
#define SV_STAFF_GANDALF                32	// sorta hack? (tval=6)

/* jk - the first valuable staff */
#define SV_STAFF_NASTY_STAFF              4

/* The "sval" codes for TV_WAND */
#define SV_WAND_HEAL_MONSTER             0
#define SV_WAND_HASTE_MONSTER            1
#define SV_WAND_CLONE_MONSTER            2
#define SV_WAND_TELEPORT_AWAY            3
#define SV_WAND_DISARMING                4
#define SV_WAND_TRAP_DOOR_DEST           5
#define SV_WAND_STONE_TO_MUD             6
#define SV_WAND_LITE                     7
#define SV_WAND_SLEEP_MONSTER            8
#define SV_WAND_SLOW_MONSTER             9
#define SV_WAND_CONFUSE_MONSTER         10
#define SV_WAND_FEAR_MONSTER            11
#define SV_WAND_DRAIN_LIFE              12
#define SV_WAND_POLYMORPH               13
#define SV_WAND_STINKING_CLOUD          14
#define SV_WAND_MAGIC_MISSILE           15
#define SV_WAND_ACID_BOLT               16
#define SV_WAND_CHARM_MONSTER           17
#define SV_WAND_FIRE_BOLT               18
#define SV_WAND_COLD_BOLT               19
#define SV_WAND_ACID_BALL               20
#define SV_WAND_ELEC_BALL               21
#define SV_WAND_FIRE_BALL               22
#define SV_WAND_COLD_BALL               23
#define SV_WAND_WONDER                  24
#define SV_WAND_ANNIHILATION            25
#define SV_WAND_DRAGON_FIRE             26
#define SV_WAND_DRAGON_COLD             27
#define SV_WAND_DRAGON_BREATH           28
#define SV_WAND_ROCKETS                 29
#define SV_WAND_NOTHING                 30
#define SV_WAND_WALL_CREATION           31
#define SV_WAND_THRAIN                  32

/* jk - the first valuable wand */
#define SV_WAND_NASTY_WAND               3

/* The "sval" codes for TV_ROD(Rod Tips) */
#define SV_ROD_NOTHING                   0
#define SV_ROD_DETECT_DOOR               1
#define SV_ROD_IDENTIFY                  2
#define SV_ROD_RECALL                    3
#define SV_ROD_ILLUMINATION              4
#define SV_ROD_MAPPING                   5
#define SV_ROD_DETECTION                 6
#define SV_ROD_PROBING                   7
#define SV_ROD_CURING                    8
#define SV_ROD_HEALING                   9
#define SV_ROD_RESTORATION              10
#define SV_ROD_SPEED                    11
/* xxx (aimed) */
#define SV_ROD_TELEPORT_AWAY            13
#define SV_ROD_DISARMING                14
#define SV_ROD_LITE                     15
#define SV_ROD_SLEEP_MONSTER            16
#define SV_ROD_SLOW_MONSTER             17
#define SV_ROD_DRAIN_LIFE               18
#define SV_ROD_POLYMORPH                19
#define SV_ROD_ACID_BOLT                20
#define SV_ROD_ELEC_BOLT                21
#define SV_ROD_FIRE_BOLT                22
#define SV_ROD_COLD_BOLT                23
#define SV_ROD_ACID_BALL                24
#define SV_ROD_ELEC_BALL                25
#define SV_ROD_FIRE_BALL                26
#define SV_ROD_COLD_BALL                27
#define SV_ROD_HAVOC                    28
#define SV_ROD_DETECT_TRAP              29
#define SV_ROD_HOME                     30


/* The "sval" codes for TV_ROD_MAIN(Rods) */
/* Note that the sval is the max mana capacity of the rod */

#define SV_ROD_WOODEN                   10
#define SV_ROD_COPPER                   20
#define SV_ROD_IRON                     50
#define SV_ROD_ALUMINIUM                75
#define SV_ROD_SILVER                   100
#define SV_ROD_GOLDEN                   125
#define SV_ROD_MITHRIL                  160
#define SV_ROD_ADMANTITE                200


/* The "sval" codes for TV_SCROLL */

#define SV_SCROLL_DARKNESS               0
#define SV_SCROLL_AGGRAVATE_MONSTER      1
#define SV_SCROLL_CURSE_ARMOR            2
#define SV_SCROLL_CURSE_WEAPON           3
#define SV_SCROLL_SUMMON_MONSTER         4
#define SV_SCROLL_SUMMON_UNDEAD          5
#define SV_SCROLL_SUMMON_MINE            6
#define SV_SCROLL_TRAP_CREATION          7
#define SV_SCROLL_PHASE_DOOR             8
#define SV_SCROLL_TELEPORT               9
#define SV_SCROLL_TELEPORT_LEVEL        10
#define SV_SCROLL_WORD_OF_RECALL        11
#define SV_SCROLL_IDENTIFY              12
#define SV_SCROLL_STAR_IDENTIFY         13
#define SV_SCROLL_REMOVE_CURSE          14
#define SV_SCROLL_STAR_REMOVE_CURSE     15
#define SV_SCROLL_ENCHANT_ARMOR         16
#define SV_SCROLL_ENCHANT_WEAPON_TO_HIT 17
#define SV_SCROLL_ENCHANT_WEAPON_TO_DAM 18
#define SV_SCROLL_ENCHANT_WEAPON_PVAL   19
#define SV_SCROLL_STAR_ENCHANT_ARMOR    20
#define SV_SCROLL_STAR_ENCHANT_WEAPON   21
#define SV_SCROLL_RECHARGING            22
#define SV_SCROLL_RESET_RECALL          23
#define SV_SCROLL_LIGHT                 24
#define SV_SCROLL_MAPPING               25
#define SV_SCROLL_DETECT_GOLD           26
#define SV_SCROLL_DETECT_ITEM           27
#define SV_SCROLL_DETECT_TRAP           28
#define SV_SCROLL_DETECT_DOOR           29
#define SV_SCROLL_DETECT_INVIS          30
#define SV_SCROLL_DIVINATION            31
#define SV_SCROLL_SATISFY_HUNGER        32
#define SV_SCROLL_BLESSING              33
#define SV_SCROLL_HOLY_CHANT            34
#define SV_SCROLL_HOLY_PRAYER           35
#define SV_SCROLL_MONSTER_CONFUSION     36
#define SV_SCROLL_PROTECTION_FROM_EVIL  37
#define SV_SCROLL_RUNE_OF_PROTECTION    38
#define SV_SCROLL_TRAP_DOOR_DESTRUCTION 39
#define SV_SCROLL_DEINCARNATION         40
#define SV_SCROLL_STAR_DESTRUCTION      41
#define SV_SCROLL_DISPEL_UNDEAD         42
#define SV_SCROLL_MASS_RESURECTION      43
#define SV_SCROLL_GENOCIDE              44
#define SV_SCROLL_MASS_GENOCIDE         45
#define SV_SCROLL_ACQUIREMENT           46
#define SV_SCROLL_STAR_ACQUIREMENT      47
#define SV_SCROLL_FIRE                  48
#define SV_SCROLL_ICE                   49
#define SV_SCROLL_CHAOS                 50
#define SV_SCROLL_RUMOR                 51
//#define SV_SCROLL_ARTIFACT              52
#define SV_SCROLL_NOTHING               53
#define SV_SCROLL_SPELL                 54

/* The "sval" codes for TV_POTION */
#define SV_POTION_WATER                  0
#define SV_POTION_APPLE_JUICE            1
#define SV_POTION_SLIME_MOLD             2
#define SV_POTION_BLOOD                  3
#define SV_POTION_SLOWNESS               4
#define SV_POTION_SALT_WATER             5
#define SV_POTION_POISON                 6
#define SV_POTION_BLINDNESS              7
#define SV_POTION_INVIS                  8
#define SV_POTION_CONFUSION              9
#define SV_POTION_MUTATION              10
#define SV_POTION_SLEEP                 11
#define SV_POTION_LEARNING              12
#define SV_POTION_LOSE_MEMORIES         13
/* xxx */
#define SV_POTION_RUINATION             15
#define SV_POTION_DEC_STR               16
#define SV_POTION_DEC_INT               17
#define SV_POTION_DEC_WIS               18
#define SV_POTION_DEC_DEX               19
#define SV_POTION_DEC_CON               20
#define SV_POTION_DEC_CHR               21
#define SV_POTION_DETONATIONS           22
#define SV_POTION_DEATH                 23
#define SV_POTION_INFRAVISION           24
#define SV_POTION_DETECT_INVIS          25
#define SV_POTION_SLOW_POISON           26
#define SV_POTION_CURE_POISON           27
#define SV_POTION_BOLDNESS              28
#define SV_POTION_SPEED                 29
#define SV_POTION_RESIST_HEAT           30
#define SV_POTION_RESIST_COLD           31
#define SV_POTION_HEROISM               32
#define SV_POTION_BESERK_STRENGTH       33
#define SV_POTION_CURE_LIGHT            34
#define SV_POTION_CURE_SERIOUS          35
#define SV_POTION_CURE_CRITICAL         36
#define SV_POTION_HEALING               37
#define SV_POTION_STAR_HEALING          38
#define SV_POTION_LIFE                  39
#define SV_POTION_RESTORE_MANA          40
#define SV_POTION_RESTORE_EXP           41
#define SV_POTION_RES_STR               42
#define SV_POTION_RES_INT               43
#define SV_POTION_RES_WIS               44
#define SV_POTION_RES_DEX               45
#define SV_POTION_RES_CON               46
#define SV_POTION_RES_CHR               47
#define SV_POTION_INC_STR               48
#define SV_POTION_INC_INT               49
#define SV_POTION_INC_WIS               50
#define SV_POTION_INC_DEX               51
#define SV_POTION_INC_CON               52
#define SV_POTION_INC_CHR               53
/* xxx */
#define SV_POTION_AUGMENTATION          55
#define SV_POTION_ENLIGHTENMENT         56
#define SV_POTION_STAR_ENLIGHTENMENT    57
#define SV_POTION_SELF_KNOWLEDGE        58
#define SV_POTION_EXPERIENCE            59
#define SV_POTION_RESISTANCE            60
#define SV_POTION_CURING                61
#define SV_POTION_INVULNERABILITY       62
#define SV_POTION_NEW_LIFE              63

#define SV_POTION_LAST                  63

/* The "sval" codes for TV_POTION2 */
#define SV_POTION2_MIMIC_ABOMINATION     1
#define SV_POTION2_MIMIC_WOLF            2
#define SV_POTION2_MIMIC_APE             3
#define SV_POTION2_MIMIC_GOAT            4
#define SV_POTION2_MIMIC_INSECT          5
#define SV_POTION2_MIMIC_SPARROW         6
#define SV_POTION2_MIMIC_STATUE          7
#define SV_POTION2_MIMIC_VAMPIRE         8
#define SV_POTION2_MIMIC_SPIDER          9
#define SV_POTION2_MIMIC_MANA_BALL       10
#define SV_POTION2_MIMIC_FIRE_CLOUD      11
#define SV_POTION2_MIMIC_COLD_CLOUD      12
#define SV_POTION2_MIMIC_CHAOS_CLOUD     13
#define SV_POTION2_CURE_LIGHT_SANITY     14
#define SV_POTION2_CURE_SERIOUS_SANITY   15
#define SV_POTION2_CURE_CRITICAL_SANITY  16
#define SV_POTION2_CURE_SANITY           17
#define SV_POTION2_CURE_WATER            18

#define SV_POTION2_LAST                  18

/* The "sval" codes for TV_FOOD */
#define SV_FOOD_POISON                   0
#define SV_FOOD_BLINDNESS                1
#define SV_FOOD_PARANOIA                 2
#define SV_FOOD_CONFUSION                3
#define SV_FOOD_HALLUCINATION            4
#define SV_FOOD_PARALYSIS                5
#define SV_FOOD_WEAKNESS                 6
#define SV_FOOD_SICKNESS                 7
#define SV_FOOD_STUPIDITY                8
#define SV_FOOD_NAIVETY                  9
#define SV_FOOD_UNHEALTH                10
#define SV_FOOD_DISEASE                 11
#define SV_FOOD_CURE_POISON             12
#define SV_FOOD_CURE_BLINDNESS          13
#define SV_FOOD_CURE_PARANOIA           14
#define SV_FOOD_CURE_CONFUSION          15
#define SV_FOOD_CURE_SERIOUS            16
#define SV_FOOD_RESTORE_STR             17
#define SV_FOOD_RESTORE_CON             18
#define SV_FOOD_RESTORING               19
/* many missing mushrooms */
#define SV_FOOD_BISCUIT                 32
#define SV_FOOD_JERKY                   33
#define SV_FOOD_RATION                  35
#define SV_FOOD_SLIME_MOLD              36
#define SV_FOOD_WAYBREAD                37
#define SV_FOOD_PINT_OF_ALE             38
#define SV_FOOD_PINT_OF_WINE            39
#define SV_FOOD_ATHELAS                 40
#define SV_FOOD_GREAT_HEALTH            41
#define SV_FOOD_FORTUNE_COOKIE          42

/* The "sval" codes for TV_BATERIE */
#define SV_BATERIE_POISON    1
#define SV_BATERIE_EXPLOSION 2
#define SV_BATERIE_TELEPORT  3
#define SV_BATERIE_COLD      4
#define SV_BATERIE_FIRE      5
#define SV_BATERIE_ACID      6
#define SV_BATERIE_LIFE      7
#define SV_BATERIE_CONFUSION 8
#define SV_BATERIE_LITE      9
#define SV_BATERIE_CHAOS     10
#define SV_BATERIE_TIME      11
#define SV_BATERIE_MAGIC     12
#define SV_BATERIE_XTRA_LIFE 13
#define SV_BATERIE_DARKNESS  14
#define SV_BATERIE_KNOWLEDGE 15
#define SV_BATERIE_FORCE     16
#define SV_BATERIE_LIGHTNING 17
#define SV_BATERIE_MANA      18

/* The "sval" codes for TV_CORPSE */
#define SV_CORPSE_CORPSE     1
#define SV_CORPSE_SKELETON   2
#define SV_CORPSE_HEAD       3
#define SV_CORPSE_SKULL      4
#define SV_CORPSE_MEAT       5


/*** General flag values ***/


/*
 * Special cave grid flags
 */
#define CAVE_MARK	0x0001 	/* memorized feature */
#define CAVE_GLOW	0x0002 	/* self-illuminating */
#define CAVE_ICKY	0x0004 	/* part of a vault */
#define CAVE_ROOM	0x0008 	/* part of a room */
#define CAVE_LITE	0x0010 	/* lite flag  */
#define CAVE_VIEW	0x0020 	/* view flag */
#define CAVE_TEMP	0x0040 	/* temp flag */
#define CAVE_XTRA	0x0080 	/* misc flag */

#if 0	// for future expansion..
#define CAVE_TRDT	0x0100    /* trap detected */
#define CAVE_IDNT	0x0200    /* grid identified (fountains) */
#define CAVE_SPEC	0x0400    /* special mark(quests) */
#define CAVE_FREE	0x0800    /* no random generation on it */
#endif


/*
 * Bit flags for the "project()" function
 *
 *   JUMP: Jump directly to the target location (this is a hack)
 *   BEAM: Work as a beam weapon (affect every grid passed through)
 *   THRU: Continue "through" the target (used for "bolts"/"beams")
 *   STOP: Stop as soon as we hit a monster (used for "bolts")
 *   GRID: Affect each grid in the "blast area" in some way
 *   ITEM: Affect each object in the "blast area" in some way
 *   KILL: Affect each monster in the "blast area" in some way
 *   HIDE: Hack -- disable "visual" feedback from projection
 */
#define PROJECT_JUMP	0x01
#define PROJECT_BEAM	0x02
#define PROJECT_THRU	0x04
#define PROJECT_STOP	0x08
#define PROJECT_GRID	0x10
#define PROJECT_ITEM	0x20
#define PROJECT_KILL	0x40
#define PROJECT_HIDE	0x80

/*
 * Bit flags for the "enchant()" function
 */
#define ENCH_TOHIT   0x01
#define ENCH_TODAM   0x02
#define ENCH_TOAC    0x04


/*
 * Some bit-flags for the "smart" field
 */
#define SM_RES_ACID		0x00000001
#define SM_RES_ELEC		0x00000002
#define SM_RES_FIRE		0x00000004
#define SM_RES_COLD		0x00000008
#define SM_RES_POIS		0x00000010
#define SM_RES_NETH		0x00000020
#define SM_RES_LITE		0x00000040
#define SM_RES_DARK		0x00000080
#define SM_RES_FEAR		0x00000100
#define SM_RES_CONF		0x00000200
#define SM_RES_CHAOS	0x00000400
#define SM_RES_DISEN	0x00000800
#define SM_RES_BLIND	0x00001000
#define SM_RES_NEXUS	0x00002000
#define SM_RES_SOUND	0x00004000
#define SM_RES_SHARD	0x00008000
#define SM_OPP_ACID		0x00010000
#define SM_OPP_ELEC		0x00020000
#define SM_OPP_FIRE		0x00040000
#define SM_OPP_COLD		0x00080000
#define SM_OPP_POIS		0x00100000
#define SM_OPP_XXX1		0x00200000
#define SM_OPP_XXX2		0x00400000
#define SM_OPP_XXX3		0x00800000
#define SM_IMM_ACID		0x01000000
#define SM_IMM_ELEC		0x02000000
#define SM_IMM_FIRE		0x04000000
#define SM_IMM_COLD		0x08000000
#define SM_IMM_XXX5		0x10000000
#define SM_IMM_XXX6		0x20000000
#define SM_IMM_FREE		0x40000000
#define SM_IMM_MANA		0x80000000



/*
 * Bit flags for the "p_ptr->notice" variable
 */
#define PN_COMBINE	0x00000001L	/* Combine the pack */
#define PN_REORDER	0x00000002L	/* Reorder the pack */
/* xxx (many) */


/*
 * Bit flags for the "p_ptr->update" variable
 */
#define PU_BONUS	0x00000001L	/* Calculate bonuses */
#define PU_TORCH	0x00000002L	/* Calculate torch radius */
/* xxx (many) */
#define PU_SANITY       0x00000008L     /* Calculate csan and msan */
#define PU_HP		0x00000010L	/* Calculate chp and mhp */
#define PU_MANA		0x00000020L	/* Calculate csp and msp */
#define PU_SPELLS	0x00000040L	/* Calculate spells */
/* xxx (many) */
/* xxx (many) */
#define PU_UN_VIEW	0x00010000L	/* Forget view */
#define PU_UN_LITE	0x00020000L	/* Forget lite */
/* xxx (many) */
#define PU_VIEW		0x00100000L	/* Update view */
#define PU_LITE		0x00200000L	/* Update lite */
/* xxx */
#define PU_MONSTERS	0x01000000L	/* Update monsters */
#define PU_DISTANCE	0x02000000L	/* Update distances */
/* xxx */
#define PU_FLOW		0x10000000L	/* Update flow */
/* xxx (many) */


/*
 * Bit flags for the "p_ptr->redraw" variable
 */
#define PR_MISC		0x00000001L	/* Display Race/Class */
#define PR_TITLE	0x00000002L	/* Display Title */
#define PR_LEV		0x00000004L	/* Display Level */
#define PR_EXP		0x00000008L	/* Display Experience */
#define PR_STATS	0x00000010L	/* Display Stats */
#define PR_ARMOR	0x00000020L	/* Display Armor */
#define PR_HP		0x00000040L	/* Display Hitpoints */
#define PR_MANA		0x00000080L	/* Display Mana */
#define PR_GOLD		0x00000100L	/* Display Gold */
#define PR_DEPTH	0x00000200L	/* Display Depth */
#define PR_HISTORY	0x00000400L	/* Display History */
#define PR_HEALTH	0x00000800L	/* Display Health Bar */
#define PR_CUT		0x00001000L	/* Display Extra (Cut) */
#define PR_STUN		0x00002000L	/* Display Extra (Stun) */
#define PR_HUNGER	0x00004000L	/* Display Extra (Hunger) */
#define PR_VARIOUS	0x00008000L	/* Display Various info (age, etc.) */
#define PR_BLIND	0x00010000L	/* Display Extra (Blind) */
#define PR_CONFUSED	0x00020000L	/* Display Extra (Confused) */
#define PR_AFRAID	0x00040000L	/* Display Extra (Afraid) */
#define PR_POISONED	0x00080000L	/* Display Extra (Poisoned) */
#define PR_STATE	0x00100000L	/* Display Extra (State) */
#define PR_SPEED	0x00200000L	/* Display Extra (Speed) */
#define PR_STUDY	0x00400000L	/* Display Extra (Study) */
#define PR_PLUSSES	0x00800000L	/* Display Plusses to Hit/Damage */
#define PR_EXTRA	0x01000000L	/* Display Extra Info */
#define PR_BASIC	0x02000000L	/* Display Basic Info */
#define PR_MAP		0x04000000L	/* Display Map */
#define PR_WIPE		0x08000000L	/* Hack -- Total Redraw */
#define PR_SKILLS	0x10000000L	/* Display Skills */
#define PR_SANITY	0x20000000L     /* Display Sanity */
/* xxx */
/* xxx */
/* xxx */

/*
 * Bit flags for the "p_ptr->window" variable (etc)
 */
#define PW_INVEN	0x00000001L	/* Display inven/equip */
#define PW_EQUIP	0x00000002L	/* Display equip/inven */
#define PW_SPELL	0x00000004L	/* Display spell list */
#define PW_PLAYER	0x00000008L	/* Display character */
/* xxx */
/* xxx */
#define PW_MESSAGE	0x00000040L	/* Display messages */
#define PW_OVERHEAD	0x00000080L	/* Display overhead view */
#define PW_MONSTER	0x00000100L	/* Display monster recall */
#define PW_OBJECT	0x00000200L	/* Display object recall */
/* xxx */
#define PW_SNAPSHOT	0x00000800L	/* Display snap-shot */
/* xxx */
/* xxx */
#define PW_BORG_1	0x00004000L	/* Display borg messages */
#define PW_BORG_2	0x00008000L	/* Display borg status */



/*** General index values ***/


/*
 * Legal restrictions for "summon_specific()"
 */
#define SUMMON_ANT			11
#define SUMMON_SPIDER		12
#define SUMMON_HOUND		13
#define SUMMON_HYDRA		14
#define SUMMON_ANGEL		15
#define SUMMON_DEMON		16
#define SUMMON_UNDEAD		17
#define SUMMON_DRAGON		18
#define SUMMON_HI_UNDEAD	21
#define SUMMON_HI_DRAGON	22
#define SUMMON_WRAITH		31
#define SUMMON_UNIQUE		32
/* additions from PernA */
#define SUMMON_BIZARRE1             33
#define SUMMON_BIZARRE2             34
#define SUMMON_BIZARRE3             35
#define SUMMON_BIZARRE4             36
#define SUMMON_BIZARRE5             37
#define SUMMON_BIZARRE6             38
#define SUMMON_HI_DEMON             39
#define SUMMON_KIN                  40
#define SUMMON_DAWN                 41
#define SUMMON_ANIMAL               42
#define SUMMON_ANIMAL_RANGER        43
#define SUMMON_HI_UNDEAD_NO_UNIQUES 44
#define SUMMON_HI_DRAGON_NO_UNIQUES 45
#define SUMMON_NO_UNIQUES           46
#define SUMMON_PHANTOM              47
#define SUMMON_ELEMENTAL            48
#define SUMMON_DRAGONRIDER          49
#define SUMMON_BLUE_HORROR          50
#define SUMMON_BUG                  51
#define SUMMON_RNG                  52
#define SUMMON_MINE                 53
#define SUMMON_HUMAN                54
#define SUMMON_SHADOWS              55
#define SUMMON_GHOST                56
#define SUMMON_QUYLTHULG            57
#define SUMMON_LUA                  58

/* Again, PernMangband one(s)	- Jir - */
#define SUMMON_VERMIN		59


/*
 * Spell types used by project(), and related functions.
 */
#define GF_ELEC         1
#define GF_POIS         2
#define GF_ACID         3
#define GF_COLD         4
#define GF_FIRE         5
#define GF_MISSILE      10
#define GF_ARROW        11
#define GF_PLASMA       12
#define GF_HOLY_ORB     13
#define GF_WATER        14
#define GF_LITE         15
#define GF_DARK         16
#define GF_LITE_WEAK	17
#define GF_DARK_WEAK	18
#define GF_SHARDS       20
#define GF_SOUND        21
#define GF_CONFUSION    22
#define GF_FORCE        23
#define GF_INERTIA      24
#define GF_MANA         26
#define GF_METEOR       27
#define GF_ICE          28
#define GF_CHAOS        30
#define GF_NETHER       31
#define GF_DISENCHANT   32
#define GF_NEXUS        33
#define GF_TIME         34
#define GF_GRAVITY      35
#define GF_KILL_WALL	40
#define GF_KILL_DOOR	41
#define GF_KILL_TRAP	42
#define GF_MAKE_WALL	45
#define GF_MAKE_DOOR	46
#define GF_MAKE_TRAP	47
#define GF_OLD_CLONE	51
#define GF_OLD_POLY		52
#define GF_OLD_HEAL		53
#define GF_OLD_SPEED	54
#define GF_OLD_SLOW		55
#define GF_OLD_CONF		56
#define GF_OLD_SLEEP	57
#define GF_OLD_DRAIN	58
#define GF_AWAY_UNDEAD	61
#define GF_AWAY_EVIL	62
#define GF_AWAY_ALL	63
#define GF_TURN_UNDEAD	64
#define GF_TURN_EVIL	65
#define GF_TURN_ALL	66
#define GF_DISP_UNDEAD	67
#define GF_DISP_EVIL	68
#define GF_DISP_ALL	69

#define	GF_HEAL_PLAYER	70
#define	GF_STONE_WALL 	71
#define	GF_EARTHQUAKE 	72
#define	GF_WRAITH_PLAYER 73
#define	GF_SPEED_PLAYER  74
#define	GF_SHIELD_PLAYER 75
#define GF_RECALL_PLAYER 76
#define GF_STUN          77
#define GF_IDENTIFY      78
#define GF_PSI           79

#define GF_DISINTEGRATE 81

#define GF_MAKE_GLYPH   85
#define GF_ROCKET       91
#define GF_NUKE         110

#if 0
#define GF_DISP_DEMON   70      /* New types for Zangband begin here... */
#define GF_DISP_LIVING  71
#define GF_NUKE         73	// *
#define GF_STASIS       75
#define GF_STONE_WALL   76	// *
#define GF_DEATH_RAY    77
#define GF_STUN         78	// *
#define GF_HOLY_FIRE    79
#define GF_HELL_FIRE    80
#define GF_DISINTEGRATE 81	// -
#define GF_CHARM        82
#define GF_CONTROL_UNDEAD   83
#define GF_CONTROL_ANIMAL   84
#define GF_PSI         85	// **
#define GF_PSI_DRAIN   86
#define GF_TELEKINESIS  87
#define GF_JAM_DOOR     88
#define GF_DOMINATION   89
#define GF_DISP_GOOD    90
#define GF_IDENTIFY     91	// **
#define GF_RAISE        92
#define GF_STAR_IDENTIFY 93
#define GF_DESTRUCTION  94
#define GF_STUN_CONF    95
#define GF_STUN_DAM     96
#define GF_CONF_DAM     98
#define GF_STAR_CHARM   99
#define GF_IMPLOSION    100
#define GF_LAVA_FLOW    101
#define GF_FEAR         102
#define GF_BETWEEN_GATE 103
#define GF_WINDS_MANA   104
#define GF_DEATH        105
#define GF_CONTROL_DEMON 106
#define GF_RAISE_DEMON 107
#define GF_TRAP_DEMONSOUL 108
#define GF_ATTACK       109

#define MAX_GF          110

#endif	// 0

/*
 * Some things which induce learning
 */
#define DRS_ACID	1
#define DRS_ELEC	2
#define DRS_FIRE	3
#define DRS_COLD	4
#define DRS_POIS	5
#define DRS_NETH	6
#define DRS_LITE	7
#define DRS_DARK	8
#define DRS_FEAR	9
#define DRS_CONF	10
#define DRS_CHAOS	11
#define DRS_DISEN	12
#define DRS_BLIND	13
#define DRS_NEXUS	14
#define DRS_SOUND	15
#define DRS_SHARD	16
#define DRS_FREE	30
#define DRS_MANA	31



/*
 * Hack -- first "normal" artifact in the artifact list.  All of
 * the artifacts with indexes from 1 to 15 are "special" (lights,
 * rings, amulets), and the ones from 16 to 127 are "normal".
 */
#define ART_MIN_NORMAL		16


/*
 * Hack -- special "xtra" object powers
 */

/* Sustain one stat */
#define EGO_XTRA_SUSTAIN	1

/* High resist */
#define EGO_XTRA_POWER		2

/* Special ability */
#define EGO_XTRA_ABILITY	3





/*** Object flag values ***/


/*
 * Chest trap flags (see "tables.c")
 */
#define CHEST_LOSE_STR		0x01
#define CHEST_LOSE_CON		0x02
#define CHEST_POISON		0x04
#define CHEST_PARALYZE		0x08
#define CHEST_EXPLODE		0x10
#define CHEST_SUMMON		0x20



/*
 * Special "Item Flags"
 */
#define ID_SENSE	0x01	/* Item has been "sensed" */
#define ID_FIXED	0x02	/* Item has been "haggled" */
#define ID_EMPTY	0x04	/* Item charges are known */
#define ID_KNOWN	0x08	/* Item abilities are known */
#define ID_RUMOUR	0x10	/* Item background is known */
#define ID_MENTAL	0x20	/* Item information is known */
#define ID_CURSED	0x40	/* Item is temporarily cursed */
#define ID_BROKEN	0x80	/* Item is permanently worthless */



/*
 * As of 2.7.8, the "object flags" are valid for all objects, and as
 * of 2.7.9, these flags are not actually stored with the object.
 *
 * Note that "flags1" contains all flags dependant on "pval" (including
 * stat bonuses, but NOT stat sustainers), plus all "extra attack damage"
 * flags (SLAY_XXX and BRAND_XXX).
 *
 * Note that "flags2" contains all "resistances" (including "Stat Sustainers",
 * actual immunities, and resistances).  Note that "Hold Life" is really an
 * "immunity" to ExpLoss, and "Free Action" is "immunity to paralysis".
 *
 * Note that "flags3" contains everything else -- including the three "CURSED"
 * flags, and the "BLESSED" flag, several "item display" parameters, some new
 * flags for powerful Bows, and flags which affect the player in a "general"
 * way (LITE, TELEPATHY, SEE_INVIS, SLOW_DIGEST, REGEN, FEATHER), including
 * all the "general" curses (TELEPORT, AGGRAVATE, EXP_DRAIN).  It also has
 * four new flags called "ITEM_IGNORE_XXX" which lets an item specify that
 * it can not be affected by various forms of destruction.  This is NOT as
 * powerful as actually granting resistance/immunity to the wearer.
 */

#define TR1_STR				0x00000001L	/* STR += "pval" */
#define TR1_INT				0x00000002L	/* INT += "pval" */
#define TR1_WIS				0x00000004L	/* WIS += "pval" */
#define TR1_DEX				0x00000008L	/* DEX += "pval" */
#define TR1_CON				0x00000010L	/* CON += "pval" */
#define TR1_CHR				0x00000020L	/* CHR += "pval" */
#define TR1_MANA			0x00000040L	/* SP += "pval" * SP / 10 */
//#define TR1_SPELL_SPEED			0x00000080L	/* Spell Speed += pval */
#define TR1_SPELL			0x00000080L	/* Spell Speed += pval */
#define TR1_STEALTH			0x00000100L	/* Stealth += "pval" */
#define TR1_SEARCH			0x00000200L	/* Search += "pval" */
#define TR1_INFRA			0x00000400L	/* Infra += "pval" */
#define TR1_TUNNEL			0x00000800L	/* Tunnel += "pval" */
#define TR1_SPEED			0x00001000L	/* Speed += "pval" */
#define TR1_BLOWS			0x00002000L	/* Blows += "pval" */
#define TR1_LIFE		0x00004000L	/* Later */
#define TR1_VAMPIRIC			0x00008000L	/* XXX4 */
#define TR1_SLAY_ANIMAL		0x00010000L
#define TR1_SLAY_EVIL		0x00020000L
#define TR1_SLAY_UNDEAD		0x00040000L
#define TR1_SLAY_DEMON		0x00080000L
#define TR1_SLAY_ORC		0x00100000L
#define TR1_SLAY_TROLL		0x00200000L
#define TR1_SLAY_GIANT		0x00400000L
#define TR1_SLAY_DRAGON		0x00800000L
#define TR1_KILL_DRAGON		0x01000000L	/* Execute Dragon */
#define TR1_VORPAL			0x02000000L	/* XXX5 */
#define TR1_IMPACT			0x04000000L	/* Cause Earthquakes */
#define TR1_BRAND_POISON			0x08000000L	/* XXX6 */
#define TR1_BRAND_ACID		0x10000000L
#define TR1_BRAND_ELEC		0x20000000L
#define TR1_BRAND_FIRE		0x40000000L
#define TR1_BRAND_COLD		0x80000000L

#define TR2_SUST_STR		0x00000001L
#define TR2_SUST_INT		0x00000002L
#define TR2_SUST_WIS		0x00000004L
#define TR2_SUST_DEX		0x00000008L
#define TR2_SUST_CON		0x00000010L
#define TR2_SUST_CHR		0x00000020L
#define TR2_REDUC_FIRE                  0x00000040L     /* Later */
#define TR2_REDUC_COLD                  0x00000080L     /* Later */
#define TR2_IM_ACID			0x00000100L
#define TR2_IM_ELEC			0x00000200L
#define TR2_IM_FIRE			0x00000400L
#define TR2_IM_COLD			0x00000800L
#define TR2_REDUC_ELEC                  0x00001000L     /* Later */
#define TR2_REDUC_ACID                  0x00002000L     /* Later */
#define TR2_FREE_ACT		0x00004000L	/* Free Action */
#define TR2_HOLD_LIFE	 	0x00008000L	/* Hold Life */
#define TR2_RES_ACID		0x00010000L
#define TR2_RES_ELEC		0x00020000L
#define TR2_RES_FIRE		0x00040000L
#define TR2_RES_COLD		0x00080000L
#define TR2_RES_POIS		0x00100000L
//#define TR2_ANTI_MAGIC		0x00200000L
#define TR2_RES_FEAR		0x00200000L
#define TR2_RES_LITE		0x00400000L
#define TR2_RES_DARK		0x00800000L
#define TR2_RES_BLIND		0x01000000L
#define TR2_RES_CONF		0x02000000L
#define TR2_RES_SOUND		0x04000000L
#define TR2_RES_SHARDS		0x08000000L
#define TR2_RES_NETHER		0x10000000L
#define TR2_RES_NEXUS		0x20000000L
#define TR2_RES_CHAOS		0x40000000L
#define TR2_RES_DISEN		0x80000000L

#if 0
#define TR3_KNOWLEDGE			0x00000001L	/* Later */
#define TR3_XXX2			0x00000002L	/* Later */
#define TR3_XXX3			0x00000004L	/* Later */
#define TR3_XXX4			0x00000008L	/* Later */
#define TR3_XXX5			0x00000010L	/* Later */
#define TR3_XXX6			0x00000020L	/* Later */
#define TR3_XXX7			0x00000040L	/* Later */
#define TR3_XXX8			0x00000080L	/* Later */
#endif	// 0

#define TR3_EASY_KNOW		0x00000100L	/* Aware -> Known */
#define TR3_HIDE_TYPE		0x00000200L	/* Hide "pval" description */
#define TR3_SHOW_MODS		0x00000400L	/* Always show Tohit/Todam */
#define TR3_INSTA_ART		0x00000800L	/* Item must be an artifact */
#define TR3_FEATHER	 		0x00001000L	/* Feather Falling */
//#define TR3_LITE			0x00002000L	/* Permanent Light */
#define TR3_LITE1			0x00002000L	/* Permanent Light */
#define TR3_SEE_INVIS		0x00004000L	/* See Invisible */
//#define TR3_TELEPATHY		0x00008000L	/* Telepathy */
#define TR3_NO_NORM_ART		0x00008000L	/* */
#define TR3_SLOW_DIGEST		0x00010000L	/* Item slows down digestion */
#define TR3_REGEN			0x00020000L	/* Item induces regeneration */
#define TR3_XTRA_MIGHT		0x00040000L	/* Bows get extra multiplier */
#define TR3_XTRA_SHOTS		0x00080000L	/* Bows get extra shots */
#define TR3_IGNORE_ACID		0x00100000L	/* Item ignores Acid Damage */
#define TR3_IGNORE_ELEC		0x00200000L	/* Item ignores Elec Damage */
#define TR3_IGNORE_FIRE		0x00400000L	/* Item ignores Fire Damage */
#define TR3_IGNORE_COLD		0x00800000L	/* Item ignores Cold Damage */
#define TR3_ACTIVATE		0x01000000L	/* Item can be activated */
#define TR3_DRAIN_EXP		0x02000000L	/* Item drains Experience */
#define TR3_TELEPORT		0x04000000L	/* Item teleports player */
#define TR3_AGGRAVATE		0x08000000L	/* Item aggravates monsters */
#define TR3_BLESSED			0x10000000L	/* Item is Blessed */
#define TR3_CURSED			0x20000000L	/* Item is Cursed */
#define TR3_HEAVY_CURSE		0x40000000L	/* Item is Heavily Cursed */
#define TR3_PERMA_CURSE		0x80000000L	/* Item is Perma Cursed */

/* Flags from PernAngband	- Jir - */
#define TR1_VORPAL                      0x02000000L     /* Later */
#define TR1_BRAND_POIS                  0x08000000L

#define TR3_SH_FIRE             0x00000001L     /* Immolation (Fire) */
#define TR3_SH_ELEC             0x00000002L     /* Electric Sheath */
#define TR3_AUTO_CURSE          0x00000004L     /* The obj will recurse itself */
#define TR3_DECAY               0x00000008L     /* Decay */
#define TR3_NO_TELE             0x00000010L     /* Anti-teleportation */
#define TR3_NO_MAGIC            0x00000020L     /* Anti-magic */
#define TR3_WRAITH              0x00000040L     /* Wraithform */
#define TR3_TY_CURSE            0x00000080L     /* The Ancient Curse */


#define TR4_NEVER_BLOW          0x00000001L     /* Weapon can't attack */
#define TR4_PRECOGNITION        0x00000002L     /* Like activating the cheat mode */
#define TR4_BLACK_BREATH        0x00000004L     /* Tolkien's Black Breath */
#define TR4_RECHARGE            0x00000008L     /* For artifact Wands and Staffs */
#define TR4_FLY                 0x00000010L     /* This one and ONLY this one allow you to fly over trees */
#define TR4_DG_CURSE            0x00000020L     /* The Ancient Morgothian Curse */
#define TR4_COULD2H             0x00000040L     /* Can wield it 2 Handed */
#define TR4_MUST2H              0x00000080L     /* Must wield it 2 Handed */
#define TR4_LEVELS              0x00000100L     /* Can gain exp/exp levels !! */
#define TR4_CLONE               0x00000200L     /* Can clone monsters */
#define TR4_SPECIAL_GENE        0x00000400L     /* The object can only be generated in special conditions like quests, special dungeons, ... */
#define TR4_CLIMB               0x00000800L     /* Allow climbing mountains */
#define TR4_FAST_CAST           0x00001000L     /* Rod is x2 time faster to use */
#define TR4_CAPACITY            0x00002000L     /* Rod can take x2 mana */
#define TR4_CHARGING            0x00004000L     /* Rod recharge faster */
#define TR4_CHEAPNESS           0x00008000L     /* Rod spells are cheaper(in mana cost) to cast */
#define TR4_FOUNTAIN            0x00010000L     /* Available as fountain (for potions) */
#define TR4_ANTIMAGIC_50        0x00020000L     /* Forbid magic */
#define TR4_ANTIMAGIC_30        0x00040000L     /* Forbid magic */
#define TR4_ANTIMAGIC_20        0x00080000L     /* Forbid magic */
#define TR4_ANTIMAGIC_10        0x00100000L     /* Forbid magic */
#define TR4_EASY_USE            0x00200000L     /* Easily activable */
#define TR4_IM_NETHER           0x00400000L     /* Immunity to nether */
#define TR4_RECHARGED           0x00800000L     /* Object has been recharged once */
#define TR4_ULTIMATE            0x01000000L     /* ULTIMATE artifact */
#define TR4_AUTO_ID             0x02000000L     /* Id stuff on floor */
#define TR4_LITE2               0x04000000L     /* lite radius 2 */
#define TR4_LITE3               0x08000000L     /* lite radius 3 */
#define TR4_FUEL_LITE           0x10000000L     /* fuelable lite */
#define TR4_ART_EXP             0x20000000L     /* Will accumulate xp */
#define TR4_CURSE_NO_DROP       0x40000000L     /* The obj wont be dropped */
#define TR4_NO_RECHARGE         0x80000000L     /* Object Cannot be recharged */
#define TR4_NULL_MASK           0xFFFFFFFCL

#define TR5_TEMPORARY           0x00000001L     /* In timeout turns it is destroyed */
#define TR5_DRAIN_MANA          0x00000002L     /* Drains mana */
#define TR5_DRAIN_HP            0x00000004L     /* Drains hp */
#define TR5_KILL_DEMON          0x00000008L     /* Execute Demon */
#define TR5_KILL_UNDEAD         0x00000010L     /* Execute Undead */
#define TR5_CRIT                0x00000020L     /* More critical hits */
#define TR5_ATTR_MULTI          0x00000040L     /* Object shimmer -- only allowed in k_info */
#define TR5_WOUNDING            0x00000080L     /* Wounds monsters */
#define TR5_FULL_NAME           0x00000100L     /* Uses direct name from k_info */
#define TR5_LUCK                0x00000200L     /* Luck += pval */
#define TR5_IMMOVABLE           0x00000400L     /* Cannot move */

/* XXX */
#define TR5_LIFE                0x04000000L
#define TR5_CHAOTIC             0x08000000L
#define TR5_INVIS               0x10000000L
#define TR5_SENS_FIRE           0x20000000L
#define TR5_REFLECT             0x40000000L
//#define TR5_NO_NORM_ART         0x80000000L

/* ESP defines */
#define ESP_ORC                 0x00000001L
#define ESP_TROLL               0x00000002L
#define ESP_DRAGON              0x00000004L
#define ESP_GIANT               0x00000008L
#define ESP_DEMON               0x00000010L
#define ESP_UNDEAD              0x00000020L
#define ESP_EVIL                0x00000040L
#define ESP_ANIMAL              0x00000080L
#define ESP_DRAGONRIDER         0x00000100L
#define ESP_GOOD                0x00000200L
#define ESP_NONLIVING           0x00000400L
#define ESP_UNIQUE              0x00000800L
#define ESP_SPIDER              0x00001000L
// #define ESP_PLAYER			0x40000000L
#define ESP_ALL                 0x80000000L

/* Number of group of flags to choose from */
#define MAX_FLAG_GROUP          12
#define NEW_GROUP_CHANCE        40      /* Chance to get a new group */



/*
 * Hack -- flag set 1 -- mask for "pval-dependant" flags.
 * Note that all "pval" dependant flags must be in "flags1".
 */
#if 0
#define TR1_PVAL_MASK	\
        (TR1_STR | TR1_INT | TR1_WIS | TR1_DEX | \
         TR1_CON | TR1_CHR | TR1_MANA | TR1_SPELL_SPEED | \
         TR1_STEALTH | TR1_SEARCH | TR1_INFRA | TR1_TUNNEL | \
         TR1_SPEED | TR1_BLOWS | TR1_LIFE | TR1_XXX4)
#else
#define TR1_PVAL_MASK   \
	(TR1_STR | TR1_INT | TR1_WIS | TR1_DEX | \
     TR1_CON | TR1_CHR | \
	 TR1_STEALTH | TR1_SEARCH | TR1_INFRA | TR1_TUNNEL | \
     TR1_SPEED | TR1_BLOWS | TR1_MANA | TR1_SPELL)
#endif	// 0

#define TR5_PVAL_MASK   \
        (TR5_CRIT | TR5_LUCK)


/*** Ego flags ***/
#define ETR4_SUSTAIN           0x00000001L     /* Ego-Item gives a Random Sustain */
#define ETR4_OLD_RESIST        0x00000002L     /* The old "extra power" random high resist */
#define ETR4_ABILITY           0x00000004L     /* Ego-Item has a random Sustain */
#define ETR4_R_ELEM            0x00000008L     /* Item resists Acid/Fire/Cold/Elec or Poison */
#define ETR4_R_LOW             0x00000010L     /* Item has a random low resist */
#define ETR4_R_HIGH            0x00000020L     /* Item has a random high resist */
#define ETR4_R_ANY             0x00000040L     /* Item has one additional resist */
#define ETR4_R_DRAGON          0x00000080L     /* Item gets "Dragon" Resist */
#define ETR4_SLAY_WEAP         0x00000100L     /* Special 'Slaying' bonus */
#define ETR4_DAM_DIE           0x00000200L     /* Item has an additional dam die */
#define ETR4_DAM_SIZE          0x00000400L     /* Item has greater damage dice */
#define ETR4_PVAL_M1           0x00000800L     /* Item has +1 to pval */
#define ETR4_PVAL_M2           0x00001000L     /* Item has +(up to 2) to pval */
#define ETR4_PVAL_M3           0x00002000L     /* Item has +(up to 3) to pval */
#define ETR4_PVAL_M5           0x00004000L     /* Item has +(up to 5) to pval */
#define ETR4_AC_M1             0x00008000L     /* Item has +1 to AC */
#define ETR4_AC_M2             0x00010000L     /* Item has +(up to 2) to AC */
#define ETR4_AC_M3             0x00020000L     /* Item has +(up to 3) to AC */
#define ETR4_AC_M5             0x00040000L     /* Item has +(up to 5) to AC */
#define ETR4_TH_M1             0x00080000L     /* Item has +1 to hit */
#define ETR4_TH_M2             0x00100000L     /* Item has +(up to 2) to hit */
#define ETR4_TH_M3             0x00200000L     /* Item has +(up to 3) to hit */
#define ETR4_TH_M5             0x00400000L     /* Item has +(up to 5) to hit */
#define ETR4_TD_M1             0x00800000L     /* Item has +1 to dam */
#define ETR4_TD_M2             0x01000000L     /* Item has +(up to 2) to dam */
#define ETR4_TD_M3             0x02000000L     /* Item has +(up to 3) to dam */
#define ETR4_TD_M5             0x04000000L     /* Item has +(up to 5) to dam */
#define ETR4_R_P_ABILITY       0x08000000L     /* Item has a random pval-affected ability */
#define ETR4_R_STAT            0x10000000L     /* Item affects a random stat */
#define ETR4_R_STAT_SUST       0x20000000L     /* Item affects a random stat & sustains it */
#define ETR4_R_IMMUNITY        0x40000000L     /* Item gives a random immunity */
#define ETR4_LIMIT_BLOWS       0x80000000L     /* switch the "limit blows" feature */

#define BIAS_ELEC 1                     /* "Biases" for random artifact gen */
#define BIAS_POIS 2
#define BIAS_FIRE 3
#define BIAS_COLD 4
#define BIAS_ACID 5
#define BIAS_STR 6
#define BIAS_INT 7
#define BIAS_WIS 8
#define BIAS_DEX 9
#define BIAS_CON 10
#define BIAS_CHR 11
#define BIAS_CHAOS 12
#define BIAS_PRIESTLY 13
#define BIAS_NECROMANTIC 14
#define BIAS_LAW 15
#define BIAS_ROGUE 16
#define BIAS_MAGE 17
#define BIAS_WARRIOR 18
#define BIAS_RANGER 19



/*** Monster blow constants ***/


/*
 * New monster blow methods
 */
#define RBM_HIT		1
#define RBM_TOUCH	2
#define RBM_PUNCH	3
#define RBM_KICK	4
#define RBM_CLAW	5
#define RBM_BITE	6
#define RBM_STING	7
#define RBM_XXX1	8
#define RBM_BUTT	9
#define RBM_CRUSH	10
#define RBM_ENGULF	11
//#define RBM_XXX2	12
#define RBM_CRAWL	13
#define RBM_DROOL	14
#define RBM_SPIT	15
//#define RBM_XXX3	16
#define RBM_GAZE	17
#define RBM_WAIL	18
#define RBM_SPORE	19
#define RBM_XXX4	20
#define RBM_BEG		21
#define RBM_INSULT	22
#define RBM_MOAN	23
//#define RBM_XXX5	24

#define RBM_ANY          0
#define RBM_CHARGE      12
#define RBM_EXPLODE     16
#define RBM_SHOW        24

/*
 * New monster blow effects
 */
#define RBE_HURT		1
#define RBE_POISON		2
#define RBE_UN_BONUS	3
#define RBE_UN_POWER	4
#define RBE_EAT_GOLD	5
#define RBE_EAT_ITEM	6
#define RBE_EAT_FOOD	7
#define RBE_EAT_LITE	8
#define RBE_ACID		9
#define RBE_ELEC		10
#define RBE_FIRE		11
#define RBE_COLD		12
#define RBE_BLIND		13
#define RBE_CONFUSE		14
#define RBE_TERRIFY		15
#define RBE_PARALYZE	16
#define RBE_LOSE_STR	17
#define RBE_LOSE_INT	18
#define RBE_LOSE_WIS	19
#define RBE_LOSE_DEX	20
#define RBE_LOSE_CON	21
#define RBE_LOSE_CHR	22
#define RBE_LOSE_ALL	23
#define RBE_SHATTER		24
#define RBE_EXP_10		25
#define RBE_EXP_20		26
#define RBE_EXP_40		27
#define RBE_EXP_80		28

#define RBE_DISEASE     29
#define RBE_TIME        30
#define RBE_SANITY      31
#define RBE_HALLU       32
#define RBE_PARASITE    33


/*** Monster flag values (hard-coded) ***/


/*
 * New monster race bit flags
 */
#define RF1_UNIQUE			0x00000001	/* Unique Monster */
#define RF1_QUESTOR			0x00000002	/* Quest Monster */
#define RF1_MALE			0x00000004	/* Male gender */
#define RF1_FEMALE			0x00000008	/* Female gender */
#define RF1_CHAR_CLEAR		0x00000010	/* Absorbs symbol */
#define RF1_CHAR_MULTI		0x00000020	/* Changes symbol */
#define RF1_ATTR_CLEAR		0x00000040	/* Absorbs color */
#define RF1_ATTR_MULTI		0x00000080	/* Changes color */
#define RF1_FORCE_DEPTH		0x00000100	/* Start at "correct" depth */
#define RF1_FORCE_MAXHP		0x00000200	/* Start with max hitpoints */
#define RF1_FORCE_SLEEP		0x00000400	/* Start out sleeping */
#define RF1_FORCE_EXTRA		0x00000800	/* Start out something */
#define RF1_FRIEND			0x00001000	/* Arrive with a friend */
#define RF1_FRIENDS			0x00002000	/* Arrive with some friends */
#define RF1_ESCORT			0x00004000	/* Arrive with an escort */
#define RF1_ESCORTS			0x00008000	/* Arrive with some escorts */
#define RF1_NEVER_BLOW		0x00010000	/* Never make physical blow */
#define RF1_NEVER_MOVE		0x00020000	/* Never make physical move */
#define RF1_RAND_25			0x00040000	/* Moves randomly (25%) */
#define RF1_RAND_50			0x00080000	/* Moves randomly (50%) */
#define RF1_ONLY_GOLD		0x00100000	/* Drop only gold */
#define RF1_ONLY_ITEM		0x00200000	/* Drop only items */
#define RF1_DROP_60			0x00400000	/* Drop an item/gold (60%) */
#define RF1_DROP_90			0x00800000	/* Drop an item/gold (90%) */
#define RF1_DROP_1D2		0x01000000	/* Drop 1d2 items/gold */
#define RF1_DROP_2D2		0x02000000	/* Drop 2d2 items/gold */
#define RF1_DROP_3D2		0x04000000	/* Drop 3d2 items/gold */
#define RF1_DROP_4D2		0x08000000	/* Drop 4d2 items/gold */
#define RF1_DROP_GOOD		0x10000000	/* Drop good items */
#define RF1_DROP_GREAT		0x20000000	/* Drop great items */
#define RF1_DROP_USEFUL		0x40000000	/* Drop "useful" items */
#define RF1_DROP_CHOSEN		0x80000000	/* Drop "chosen" items */

/*
 * New monster race bit flags
 */
#define RF2_STUPID			0x00000001	/* Monster is stupid */
#define RF2_SMART			0x00000002	/* Monster is smart */
//#define RF2_XXX1			0x00000004	/* (?) */
//#define RF2_XXX2			0x00000008	/* (?) */
#define RF2_CAN_SPEAK            0x00000004  /* TY: can speak */
#define RF2_REFLECTING                  0x00000008      /* Reflects bolts */
#define RF2_INVISIBLE		0x00000010	/* Monster avoids vision */
#define RF2_COLD_BLOOD		0x00000020	/* Monster avoids infra */
#define RF2_EMPTY_MIND		0x00000040	/* Monster avoids telepathy */
#define RF2_WEIRD_MIND		0x00000080	/* Monster avoids telepathy? */
//#define RF2_MULTIPLY		0x00000100	/* Monster reproduces */
#define RF2_DEATH_ORB           0x00000100      /* Death Orb */
#define RF2_REGENERATE		0x00000200	/* Monster regenerates */
#define RF2_SHAPECHANGER        0x00000400  /* TY: shapechanger */
#define RF2_ATTR_ANY            0x00000800  /* TY: Attr_any */
//#define RF2_XXX3			0x00000400	/* (?) */
//#define RF2_XXX4			0x00000800	/* (?) */
#define RF2_POWERFUL		0x00001000	/* Monster has strong breath */
//#define RF2_XXX5			0x00002000	/* (?) */
//#define RF2_XXX7			0x00004000	/* (?) */
//#define RF2_XXX6			0x00008000	/* (?) */
#define RF2_ELDRITCH_HORROR             0x00002000      /* Sanity-blasting horror    */
#define RF2_AURA_FIRE                   0x00004000      /* Burns in melee */
#define RF2_AURA_ELEC                   0x00008000      /* Shocks in melee */
#define RF2_OPEN_DOOR		0x00010000	/* Monster can open doors */
#define RF2_BASH_DOOR		0x00020000	/* Monster can bash doors */
#define RF2_PASS_WALL		0x00040000	/* Monster can pass walls */
#define RF2_KILL_WALL		0x00080000	/* Monster can destroy walls */
#define RF2_MOVE_BODY		0x00100000	/* Monster can move monsters */
#define RF2_KILL_BODY		0x00200000	/* Monster can kill monsters */
#define RF2_TAKE_ITEM		0x00400000	/* Monster can pick up items */
#define RF2_KILL_ITEM		0x00800000	/* Monster can crush items */
#define RF2_BRAIN_1			0x01000000
#define RF2_BRAIN_2			0x02000000
#define RF2_BRAIN_3			0x04000000
#define RF2_BRAIN_4			0x08000000
#define RF2_BRAIN_5			0x10000000
#define RF2_BRAIN_6			0x20000000
#define RF2_BRAIN_7			0x40000000
#define RF2_BRAIN_8			0x80000000

/*
 * New monster race bit flags
 */
#define RF3_ORC				0x00000001	/* Orc */
#define RF3_TROLL			0x00000002	/* Troll */
#define RF3_GIANT			0x00000004	/* Giant */
#define RF3_DRAGON			0x00000008	/* Dragon */
#define RF3_DEMON			0x00000010	/* Demon */
#define RF3_UNDEAD			0x00000020	/* Undead */
#define RF3_EVIL			0x00000040	/* Evil */
#define RF3_ANIMAL			0x00000080	/* Animal */
//#define RF3_XXX1			0x00000100	/* (?) */
//#define RF3_XXX2			0x00000200	/* (?) */
//#define RF3_XXX3			0x00000400	/* Non-Vocal (?) */
//#define RF3_IM_TELE                     0x00000800      /* Resist teleportation */
#define RF3_DRAGONRIDER            0x00000100  /* DG: DragonRider */
#define RF3_GOOD                        0x00000200      /* Good */
#define RF3_AURA_COLD                        0x00000400      /* Freezes in melee */
#define RF3_NONLIVING           0x00000800  /* TY: Non-Living (?) */
#define RF3_HURT_LITE		0x00001000	/* Hurt by lite */
#define RF3_HURT_ROCK		0x00002000	/* Hurt by rock remover */
//#define RF3_HURT_FIRE		0x00004000	/* Hurt badly by fire */
//#define RF3_HURT_COLD		0x00008000	/* Hurt badly by cold */
#define RF3_SUSCEP_FIRE           0x00004000      /* Hurt badly by fire */
#define RF3_SUSCEP_COLD           0x00008000      /* Hurt badly by cold */
#define RF3_IM_ACID			0x00010000	/* Resist acid a lot */
#define RF3_IM_ELEC			0x00020000	/* Resist elec a lot */
#define RF3_IM_FIRE			0x00040000	/* Resist fire a lot */
#define RF3_IM_COLD			0x00080000	/* Resist cold a lot */
#define RF3_IM_POIS			0x00100000	/* Resist poison a lot */
//#define RF3_IM_PSI			0x00200000	/* Immune to (?) */
#define RF3_RES_TELE                    0x00200000      /* Resist teleportation */
#define RF3_RES_NETH		0x00400000	/* Resist nether a lot */
#define RF3_RES_WATE		0x00800000	/* Resist water */
#define RF3_RES_PLAS		0x01000000	/* Resist plasma */
#define RF3_RES_NEXU		0x02000000	/* Resist nexus */
#define RF3_RES_DISE		0x04000000	/* Resist disenchantment */
//#define RF3_RES_PSI			0x08000000	/* Resist (?) */
#define RF3_UNIQUE_4                    0x08000000      /* Is a "Nazgul" unique */
#define RF3_NO_FEAR			0x10000000	/* Cannot be scared */
#define RF3_NO_STUN			0x20000000	/* Cannot be stunned */
#define RF3_NO_CONF			0x40000000	/* Cannot be confused */
#define RF3_NO_SLEEP		0x80000000	/* Cannot be slept */

/*
 * New monster race bit flags
 */
#define RF4_SHRIEK			0x00000001	/* Shriek for help */
#define RF4_MULTIPLY                    0x00000002  /* Monster reproduces */
#define RF4_S_ANIMAL                    0x00000004  /* Summon animals */
#define RF4_ROCKET                      0x00000008  /* TY: Rocket */
//#define RF4_XXX2			0x00000002	/* (?) */
//#define RF4_XXX3			0x00000004	/* (?) */
//#define RF4_XXX4			0x00000008	/* (?) */
#define RF4_ARROW_1			0x00000010	/* Fire an arrow (light) */
#define RF4_ARROW_2			0x00000020	/* Fire an arrow (heavy) */
//#define RF4_ARROW_3			0x00000040	/* Fire missiles (light) */
//#define RF4_ARROW_4			0x00000080	/* Fire missiles (heavy) */
#define RF4_BR_ACID			0x00000100	/* Breathe Acid */
#define RF4_BR_ELEC			0x00000200	/* Breathe Elec */
#define RF4_BR_FIRE			0x00000400	/* Breathe Fire */
#define RF4_BR_COLD			0x00000800	/* Breathe Cold */
#define RF4_BR_POIS			0x00001000	/* Breathe Poison */
#define RF4_BR_NETH			0x00002000	/* Breathe Nether */
#define RF4_BR_LITE			0x00004000	/* Breathe Lite */
#define RF4_BR_DARK			0x00008000	/* Breathe Dark */
#define RF4_BR_CONF			0x00010000	/* Breathe Confusion */
#define RF4_BR_SOUN			0x00020000	/* Breathe Sound */
#define RF4_BR_CHAO			0x00040000	/* Breathe Chaos */
#define RF4_BR_DISE			0x00080000	/* Breathe Disenchant */
#define RF4_BR_NEXU			0x00100000	/* Breathe Nexus */
#define RF4_BR_TIME			0x00200000	/* Breathe Time */
#define RF4_BR_INER			0x00400000	/* Breathe Inertia */
#define RF4_BR_GRAV			0x00800000	/* Breathe Gravity */
#define RF4_BR_SHAR			0x01000000	/* Breathe Shards */
#define RF4_BR_PLAS			0x02000000	/* Breathe Plasma */
#define RF4_BR_WALL			0x04000000	/* Breathe Force */
#define RF4_BR_MANA			0x08000000	/* Breathe Mana */
#define RF4_BA_NUKE                     0x10000000  /* TY: Nuke Ball */
#define RF4_BR_NUKE                     0x20000000  /* TY: Toxic Breath */
#define RF4_BA_CHAO                     0x40000000  /* Chaos Ball */
#define RF4_BR_DISI                     0x80000000  /* Breathe Disintegration */
//#define RF4_XXX5			0x10000000
//#define RF4_XXX6			0x20000000
//#define RF4_XXX7			0x40000000
//#define RF4_XXX8			0x80000000

//#define RF4_PLAYER_SPELLS (RF4_SHRIEK | RF4_ARROW_1 | RF4_ARROW_2 | RF4_ARROW_3 | RF4_ARROW_4 | RF4_BR_ACID | RF4_BR_ELEC | RF4_BR_FIRE | RF4_BR_COLD | RF4_BR_POIS | RF4_BR_NETH | RF4_BR_LITE | RF4_BR_DARK | RF4_BR_CONF | RF4_BR_SOUN | RF4_BR_CHAO | RF4_BR_DISE | RF4_BR_NEXU | RF4_BR_TIME | RF4_BR_INER | RF4_BR_GRAV | RF4_BR_SHAR | RF4_BR_PLAS | RF4_BR_WALL | RF4_BR_MANA)

#define RF4_PLAYER_SPELLS (RF4_SHRIEK | RF4_ARROW_1 | RF4_ARROW_2 | RF4_BR_ACID | RF4_BR_ELEC | RF4_BR_FIRE | RF4_BR_COLD | RF4_BR_POIS | RF4_BR_NETH | RF4_BR_LITE | RF4_BR_DARK | RF4_BR_CONF | RF4_BR_SOUN | RF4_BR_CHAO | RF4_BR_DISE | RF4_BR_NEXU | RF4_BR_TIME | RF4_BR_INER | RF4_BR_GRAV | RF4_BR_SHAR | RF4_BR_PLAS | RF4_BR_WALL | RF4_BR_MANA)

/*
 * New monster race bit flags
 */
#define RF5_BA_ACID			0x00000001	/* Acid Ball */
#define RF5_BA_ELEC			0x00000002	/* Elec Ball */
#define RF5_BA_FIRE			0x00000004	/* Fire Ball */
#define RF5_BA_COLD			0x00000008	/* Cold Ball */
#define RF5_BA_POIS			0x00000010	/* Poison Ball */
#define RF5_BA_NETH			0x00000020	/* Nether Ball */
#define RF5_BA_WATE			0x00000040	/* Water Ball */
#define RF5_BA_MANA			0x00000080	/* Mana Storm */
#define RF5_BA_DARK			0x00000100	/* Darkness Storm */
#define RF5_DRAIN_MANA		0x00000200	/* Drain Mana */
#define RF5_MIND_BLAST		0x00000400	/* Blast Mind */
#define RF5_BRAIN_SMASH		0x00000800	/* Smash Brain */
#define RF5_CURSE			0x00001000	/* Cause Light Wound */
#if 0
#define RF5_CAUSE_1			0x00001000	/* Cause Light Wound */
#define RF5_CAUSE_2			0x00002000	/* Cause Serious Wound */
#define RF5_CAUSE_3			0x00004000	/* Cause Critical Wound */
#define RF5_CAUSE_4			0x00008000	/* Cause Mortal Wound */
#endif
#define RF5_UNMAGIC			0x00008000	/* Cause Mortal Wound */
#define RF5_BO_ACID			0x00010000	/* Acid Bolt */
#define RF5_BO_ELEC			0x00020000	/* Elec Bolt (unused) */
#define RF5_BO_FIRE			0x00040000	/* Fire Bolt */
#define RF5_BO_COLD			0x00080000	/* Cold Bolt */
#define RF5_BO_POIS			0x00100000	/* Poison Bolt (unused) */
#define RF5_BO_NETH			0x00200000	/* Nether Bolt */
#define RF5_BO_WATE			0x00400000	/* Water Bolt */
#define RF5_BO_MANA			0x00800000	/* Mana Bolt */
#define RF5_BO_PLAS			0x01000000	/* Plasma Bolt */
#define RF5_BO_ICEE			0x02000000	/* Ice Bolt */
#define RF5_MISSILE			0x04000000	/* Magic Missile */
#define RF5_SCARE			0x08000000	/* Frighten Player */
#define RF5_BLIND			0x10000000	/* Blind Player */
#define RF5_CONF			0x20000000	/* Confuse Player */
#define RF5_SLOW			0x40000000	/* Slow Player */
#define RF5_HOLD			0x80000000	/* Paralyze Player */
#define RF5_PLAYER_SPELLS (0xffffffff) /* Simply all */

/*
 * New monster race bit flags
 */
#define RF6_HASTE			0x00000001	/* Speed self */
#define RF6_HAND_DOOM                   0x00000002      /* Hand of Doom */
//#define RF6_XXX1			0x00000002	/* Speed a lot (?) */
#define RF6_HEAL			0x00000004	/* Heal self */
#define RF6_S_ANIMALS                   0x00000008      /* Summon animals */
//#define RF6_XXX2			0x00000008	/* Heal a lot (?) */
#define RF6_BLINK			0x00000010	/* Teleport Short */
#define RF6_TPORT			0x00000020	/* Teleport Long */
//#define RF6_XXX3			0x00000040	/* Move to Player (?) */
//#define RF6_XXX4			0x00000080	/* Move to Monster (?) */
#define RF6_RAISE_DEAD                  0x00000040      /* Raise Dead */
#define RF6_S_BUG                       0x00000080      /* Summon Software bug */
#define RF6_TELE_TO			0x00000100	/* Move player to monster */
#define RF6_TELE_AWAY		0x00000200	/* Move player far away */
#define RF6_TELE_LEVEL		0x00000400	/* Move player vertically */
//#define RF6_XXX5			0x00000800	/* Move player (?) */
#define RF6_S_RNG                       0x00000800      /* Summon RNG */
#define RF6_DARKNESS		0x00001000	/* Create Darkness */
#define RF6_TRAPS			0x00002000	/* Create Traps */
#define RF6_FORGET			0x00004000	/* Cause amnesia */
//#define RF6_XXX6			0x00008000	/* ??? */
//#define RF6_XXX7			0x00010000	/* Summon (?) */
//#define RF6_XXX8			0x00020000	/* Summon (?) */
#define RF6_S_DRAGONRIDER               0x00008000      /* Summon DragonRiders */
#define RF6_S_KIN                       0x00010000      /* Summon "kin" */
#define RF6_S_HI_DEMON                  0x00020000      /* Summon greater demons! */
#define RF6_S_MONSTER		0x00040000	/* Summon Monster */
#define RF6_S_MONSTERS		0x00080000	/* Summon Monsters */
#define RF6_S_ANT			0x00100000	/* Summon Ants */
#define RF6_S_SPIDER		0x00200000	/* Summon Spiders */
#define RF6_S_HOUND			0x00400000	/* Summon Hounds */
#define RF6_S_HYDRA			0x00800000	/* Summon Hydras */
#define RF6_S_ANGEL			0x01000000	/* Summon Angel */
#define RF6_S_DEMON			0x02000000	/* Summon Demon */
#define RF6_S_UNDEAD		0x04000000	/* Summon Undead */
#define RF6_S_DRAGON		0x08000000	/* Summon Dragon */
#define RF6_S_HI_UNDEAD		0x10000000	/* Summon Greater Undead */
#define RF6_S_HI_DRAGON		0x20000000	/* Summon Ancient Dragon */
#define RF6_S_WRAITH		0x40000000	/* Summon Unique Wraith */
#define RF6_S_UNIQUE		0x80000000	/* Summon Unique Monster */
#define RF6_PLAYER_SPELLS (RF6_HASTE | RF6_HEAL | RF6_BLINK | RF6_TPORT | RF6_TELE_AWAY | RF6_TELE_LEVEL)

/*
 * New monster race bit flags from PernAngband.		- Jir -
 */
#define RF7_AQUATIC             0x00000001  /* Aquatic monster */
#define RF7_CAN_SWIM            0x00000002  /* Monster can swim */
#define RF7_CAN_FLY             0x00000004  /* Monster can fly */
#define RF7_FRIENDLY            0x00000008  /* Monster is friendly */
#define RF7_PET                 0x00000010  /* Monster is a pet */
#define RF7_MORTAL              0x00000020  /* Monster is a mortal being */
#define RF7_SPIDER              0x00000040  /* Monster is a spider (can pass webs) */
#define RF7_NAZGUL              0x00000080  /* Monster is a Nazgul */
#define RF7_DG_CURSE            0x00000100  /* If killed the monster grant a DG Curse to the player */
#define RF7_POSSESSOR           0x00000200  /* Is it a dreaded possessor monster ? */
#define RF7_NO_DEATH            0x00000400  /* Cannot be killed */
#define RF7_NO_TARGET           0x00000800  /* Cannot be targeted */
#define RF7_AI_ANNOY            0x00001000  /* Try to tease the player */
#define RF7_AI_SPECIAL          0x00002000  /* For quests */
#define RF7_NEUTRAL             0x00004000  /* Monster is neutral */


/*
 * Monster race flags
 */
#define RF8_DUNGEON             0x00000001
#define RF8_WILD_TOWN           0x00000002
#define RF8_XXX8X02             0x00000004
#define RF8_WILD_SHORE          0x00000008
#define RF8_WILD_OCEAN          0x00000010
#define RF8_WILD_WASTE          0x00000020
#define RF8_WILD_WOOD           0x00000040
#define RF8_WILD_VOLCANO        0x00000080
#define RF8_XXX8X08             0x00000100
#define RF8_WILD_MOUNTAIN       0x00000200
#define RF8_WILD_GRASS          0x00000400
#define RF8_NO_CUT              0x00000800
#define RF8_CTHANGBAND          0x00001000
#define RF8_PERNANGBAND         0x00002000
#define RF8_ZANGBAND            0x00004000
#define RF8_JOKEANGBAND         0x00008000
#define RF8_ANGBAND             0x00010000

#define RF8_WILD_TOO            0x80000000


/*
 * Monster race flags
 */
#define RF9_DROP_CORPSE         0x00000001
#define RF9_DROP_SKELETON       0x00000002
#define RF9_HAS_LITE            0x00000004      /* Carries a lite */
#define RF9_MIMIC               0x00000008      /* *REALLY* looks like an object ... only nastier */
#define RF9_HAS_EGG             0x00000010      /* Can be monster's eggs */
#define RF9_IMPRESED            0x00000020      /* The monster can follow you on each level until he dies */
#define RF9_SUSCEP_ACID         0x00000040      /* Susceptible to acid */
#define RF9_SUSCEP_ELEC         0x00000080      /* Susceptible to lightning */
#define RF9_SUSCEP_POIS         0x00000100      /* Susceptible to poison */
#define RF9_KILL_TREES          0x00000200      /* Monster can eat trees */
#define RF9_WYRM_PROTECT        0x00000400      /* The monster is protected by great wyrms of power: They'll be summoned if it's killed */
#define RF9_DOPPLEGANGER        0x00000800      /* The monster looks like you */
#define RF9_ONLY_DEPTH          0x00001000      /* The monster can only be generated at the GIVEN depth */
#define RF9_SPECIAL_GENE        0x00002000      /* The monster can only be generated in special conditions like quests, special dungeons, ... */
#define RF9_NEVER_GENE          0x00004000      /* The monster cannot be normaly generated */

/*
 * these flags are not in PernA nor in PernM-monsters,
 * but the code for them already exists in our code..
 * Let's consider of recycling them :)		- Jir -
 */
#define RF9_IM_TELE                     0x20000000      /* Resist teleportation */
#define RF9_IM_PSI			0x40000000	/* Immune to (?) */
#define RF9_RES_PSI			0x80000000	/* Resist (?) */

/* 
	Different types of terrain, used for the wilderness.
	-APD-
	
	HACK -- I am temporarily using these numbers to determine
	how many monsters to generate.
*/

#define		WILD_LAKE		0
#define		WILD_GRASSLAND		1
#define		WILD_FOREST		2
#define		WILD_SWAMP		20
#define		WILD_DENSEFOREST	15
#define		WILD_WASTELAND		7
#define		WILD_UNDEFINED		8
#define		WILD_CLONE		9 /* we should copy the terrain type of a neighbor */
#define		WILD_TOWN		10

/* different buildings */
#define		WILD_LOG_CABIN		0
#define		WILD_ROCK_HOME		1
#define		WILD_PERM_HOME		2	
#define		WILD_SHACK		3
#define		WILD_TOWN_HOME		4

/* types of crops */
#define		WILD_CROP_POTATO	0
#define		WILD_CROP_CABBAGE	1
#define		WILD_CROP_CARROT	2
#define		WILD_CROP_BEET		3
#define		WILD_CROP_MUSHROOM	4
#define		WILD_CROP_SQUASH	5
#define		WILD_CROP_CORN		6

/* used for wilderness generation */
#define		DIR_NORTH		0
#define		DIR_EAST		1
#define		DIR_SOUTH		2
#define		DIR_WEST		3

/* wilderness flags */

#define		WILD_F_GENERATED	1
#define		WILD_F_INHABITED	2
#define		WILD_F_IN_MEMORY	4


/*
 * Hack -- choose "intelligent" spells when desperate
 */

#define RF4_INT_MASK \
   (RF4_S_ANIMAL)
//   0L

#define RF5_INT_MASK \
  (RF5_HOLD | RF5_SLOW | RF5_CONF | RF5_BLIND | RF5_SCARE | \
   RF5_UNMAGIC)

#if 0
#define RF6_INT_MASK \
   (RF6_BLINK |  RF6_TPORT | RF6_TELE_LEVEL | RF6_TELE_AWAY | \
    RF6_HEAL | RF6_HASTE | RF6_TRAPS | \
    RF6_S_MONSTER | RF6_S_MONSTERS | \
    RF6_S_ANT | RF6_S_SPIDER | RF6_S_HOUND | RF6_S_HYDRA | \
    RF6_S_ANGEL | RF6_S_DRAGON | RF6_S_UNDEAD | RF6_S_DEMON | \
    RF6_S_HI_DRAGON | RF6_S_HI_UNDEAD | RF6_S_WRAITH | RF6_S_UNIQUE)
#endif	// 0

#define RF6_INT_MASK \
   (RF6_BLINK |  RF6_TPORT | RF6_TELE_LEVEL | RF6_TELE_AWAY | \
    RF6_HEAL | RF6_HASTE | RF6_TRAPS | \
    RF6_S_KIN | RF6_S_HI_DEMON | RF6_S_MONSTER | RF6_S_MONSTERS | \
    RF6_S_ANT | RF6_S_SPIDER | RF6_S_HOUND | RF6_S_HYDRA | \
    RF6_S_ANGEL | RF6_S_DRAGON | RF6_S_UNDEAD | RF6_S_DEMON | \
    RF6_S_HI_DRAGON | RF6_S_HI_UNDEAD | RF6_S_WRAITH | RF6_S_UNIQUE | \
    RF6_S_DRAGONRIDER | RF6_S_BUG | RF6_S_RNG | RF6_S_ANIMALS)

 
/*
 * Hack -- "bolt" spells that may hurt fellow monsters
 */
#define RF4_BOLT_MASK \
  (RF4_ARROW_1 | RF4_ARROW_2)
//  (RF4_ARROW_1 | RF4_ARROW_2 | RF4_ARROW_3 | RF4_ARROW_4)

#define RF5_BOLT_MASK \
   (RF5_BO_ACID | RF5_BO_ELEC | RF5_BO_FIRE | RF5_BO_COLD | \
    RF5_BO_POIS | RF5_BO_NETH | RF5_BO_WATE | RF5_BO_MANA | \
    RF5_BO_PLAS | RF5_BO_ICEE | RF5_MISSILE)

#define RF6_BOLT_MASK \
   0L


/* Hack -- summon spells */

#define RF4_SUMMON_MASK \
    0L

#define RF5_SUMMON_MASK \
    0L

#define RF6_SUMMON_MASK \
    (RF6_S_KIN | RF6_S_HI_DEMON | RF6_S_MONSTER | RF6_S_MONSTERS | RF6_S_ANT | \
     RF6_S_SPIDER | RF6_S_HOUND | RF6_S_HYDRA | RF6_S_ANGEL | RF6_S_DEMON | \
     RF6_S_UNDEAD | RF6_S_DRAGON | RF6_S_HI_UNDEAD | RF6_S_HI_DRAGON | \
     RF6_S_WRAITH | RF6_S_UNIQUE | RF6_S_DRAGONRIDER | RF6_S_BUG | RF6_S_RNG)




/*** Macro Definitions ***/


/*
 * Hack -- Old-style names
 */
#define term_screen	(ang_term[0])
#define term_mirror	(ang_term[1])
#define term_recall	(ang_term[2])
#define term_choice	(ang_term[3])


/*
 * Determine if a given inventory item is "aware"
 */
#define object_aware_p(IND, T) \
    (Players[IND]->obj_aware[(T)->k_idx])

/*
 * Determine if a given inventory item is "tried"
 */
#define object_tried_p(IND, T) \
    (Players[IND]->obj_tried[(T)->k_idx])


/*
 * Determine if a given inventory item is "known"
 * Test One -- Check for special "known" tag
 * Test Two -- Check for "Easy Know" + "Aware"
 */
#define object_known_p(IND, T) \
    (((T)->ident & ID_KNOWN) || \
     (k_info[(T)->k_idx].easy_know && Players[IND]->obj_aware[(T)->k_idx]))


/*
 * Return the "attr" for a given item.
 * Allow user redefinition of "aware" items.
 * Default to the "base" attr for unaware items
 */
#if 0
#define object_attr(T) \
    ((k_info[(T)->k_idx].aware) ? \
     (k_info[(T)->k_idx].x_attr) : \
     (k_info[(T)->k_idx].d_attr))

#define object_attr(T) \
    (k_info[(T)->k_idx].x_attr)

#define object_attr(T) \
    (p_ptr->k_attr[(T)->k_idx])

#endif

#define object_attr(T) \
    ((p_ptr->obj_aware[(T)->k_idx]) ? \
     (p_ptr->k_attr[(T)->k_idx]) : \
     (p_ptr->d_attr[(T)->k_idx]))

/*
 * Return the "char" for a given item.
 * Allow user redefinition of "aware" items.
 * Default to the "base" char for unaware items
 */
#if 0
#define object_char(T) \
    ((k_info[(T)->k_idx].aware) ? \
     (k_info[(T)->k_idx].x_char) : \
     (k_info[(T)->k_idx].d_char))

#define object_char(T) \
    (k_info[(T)->k_idx].x_char)

#define object_char(T) \
    (p_ptr->k_char[(T)->k_idx])

#endif

#define object_char(T) \
    ((p_ptr->obj_aware[(T)->k_idx]) ? \
     (p_ptr->k_char[(T)->k_idx]) : \
     (p_ptr->d_char[(T)->k_idx]))



/*
 * Artifacts use the "name1" field
 */
#define artifact_p(T) \
        ((T)->name1 ? TRUE : FALSE)

#define true_artifact_p(T) \
        (artifact_p(T) && (T)->name1 != ART_RANDART ? TRUE : FALSE)

/*
 * Ego-Items use the "name2" field
 */
#define ego_item_p(T) \
        ((T)->name2 ? TRUE : FALSE)

/*
 * Ego-Items use the "name2" field
 */
#define is_ego_p(T, e) \
        ((T)->name2 == (e))
    //    (((T)->name2 == (e)) || ((T)->name2b == (e)))


/*
 * Broken items.
 */
#define broken_p(T) \
        ((T)->ident & ID_BROKEN)

/*
 * Cursed items.
 */
#define cursed_p(T) \
        ((T)->ident & ID_CURSED)



/*
 * Determines if a map location is fully inside the outer walls
 *
 * (This should be replaced with the one using
 * p_ptr->max_hgt/wid?	- Jir -)
 */
#ifdef NEW_DUNGEON
#define in_bounds(Y,X) \
   (((Y) > 0) && ((X) > 0) && ((Y) < MAX_HGT-1) && ((X) < MAX_WID-1))
#else
#define in_bounds(DEPTH,Y,X) \
   ((DEPTH ? (((Y) > 0) && ((X) > 0) && ((Y) < MAX_HGT-1) && ((X) < MAX_WID-1)) \
      : (((Y) > 0) && ((X) > 0) && ((Y) < MAX_HGT-1) && ((X) < MAX_WID-1))))
#endif


/*
 * Determines if a map location is on or inside the outer walls
 */
#ifdef NEW_DUNGEON
#define in_bounds2(WPOS,Y,X) \
   ((istown(WPOS) ? (((Y) >= 0) && ((X) >= 0) && ((Y) < MAX_HGT) && ((X) < MAX_WID)) \
           : (((Y) > 0) && ((X) > 0) && ((Y) < MAX_HGT) && ((X) < MAX_WID))))
#else
#define in_bounds2(DEPTH,Y,X) \
   ((DEPTH ? (((Y) >= 0) && ((X) >= 0) && ((Y) < MAX_HGT) && ((X) < MAX_WID)) \
      : (((Y) > 0) && ((X) > 0) && ((Y) < MAX_HGT) && ((X) < MAX_WID))))
#endif

/*
 * Determines if a map location is currently "on screen" -RAK-
 * Note that "panel_contains(Y,X)" always implies "in_bounds2(Y,X)".
 */
#define panel_contains(Y,X) \
  (((Y) >= p_ptr->panel_row_min) && ((Y) <= p_ptr->panel_row_max) && \
   ((X) >= p_ptr->panel_col_min) && ((X) <= p_ptr->panel_col_max))



/*
 * Determine if a "legal" grid is a "floor" grid
 *
 * Line 1 -- forbid doors, rubble, seams, walls
 *
 * Note that the terrain features are split by a one bit test
 * into those features which block line of sight and those that
 * do not, allowing an extremely fast single bit check below.
 */
#ifdef NEW_DUNGEON	/* Forced to define and check zcave */
#define cave_floor_bold(ZCAVE,Y,X) \
    (!(ZCAVE[Y][X].feat & 0x20))
#else
#define cave_floor_bold(DEPTH,Y,X) \
    (!(cave[DEPTH][Y][X].feat & 0x20))
#endif

/*
 * Determine if a "legal" grid is a "clean" floor grid
 *
 * Line 1 -- forbid non-floors
 * Line 2 -- forbid normal objects
 */
#ifdef NEW_DUNGEON
#define cave_clean_bold(ZCAVE,Y,X) \
    ((ZCAVE[Y][X].feat >= FEAT_FLOOR) && \
     (ZCAVE[Y][X].feat <= FEAT_LOOSE_DIRT) && \
     (!ZCAVE[Y][X].o_idx))
#else
#define cave_clean_bold(DEPTH,Y,X) \
    ((cave[DEPTH][Y][X].feat >= FEAT_FLOOR) && \
     (cave[DEPTH][Y][X].feat <= FEAT_LOOSE_DIRT) && \
     (!cave[DEPTH][Y][X].o_idx))
#endif

/*
 * Determine if a "legal" grid is an "empty" floor grid
 *
 * Line 1 -- forbid doors, rubble, seams, walls
 * Line 2 -- forbid normal monsters
 * Line 3 -- forbid any player
 */
#ifdef NEW_DUNGEON
#define cave_empty_bold(ZCAVE,Y,X) \
    (cave_floor_bold(ZCAVE,Y,X) && \
     !(ZCAVE[Y][X].m_idx))
#else
#define cave_empty_bold(DEPTH,Y,X) \
    (cave_floor_bold(DEPTH,Y,X) && \
     !(cave[DEPTH][Y][X].m_idx))
#endif

/*
 * Determine if a "legal" grid is an "naked" floor grid
 *
 * Line 1 -- forbid non-floors
 * Line 2 -- forbid normal objects
 * Line 3 -- forbid normal monsters
 * Line 4 -- forbid any player
 */
#ifdef NEW_DUNGEON
#define cave_naked_bold(ZCAVE,Y,X) \
    ((ZCAVE[Y][X].feat >= FEAT_FLOOR) && \
     (ZCAVE[Y][X].feat <= FEAT_DIRT) && \
     !(ZCAVE[Y][X].o_idx) && \
     !(ZCAVE[Y][X].m_idx))
#else
#define cave_naked_bold(DEPTH,Y,X) \
    ((cave[DEPTH][Y][X].feat >= FEAT_FLOOR) && \
     (cave[DEPTH][Y][X].feat <= FEAT_DIRT) && \
     !(cave[DEPTH][Y][X].o_idx) && \
     !(cave[DEPTH][Y][X].m_idx))
#endif


/*
 * Determine if a "legal" grid is "permanent"
 *
 * Line 1 -- perma-walls
 * Line 2-3 -- stairs
 * Line 4-5 -- shop doors
 * Lines 5-6 -- home doors
 */
#ifdef NEW_DUNGEON
#define cave_perma_bold(ZCAVE,Y,X) \
    ((ZCAVE[Y][X].feat >= FEAT_PERM_EXTRA) || \
     ((ZCAVE[Y][X].feat == FEAT_LESS) || \
      (ZCAVE[Y][X].feat == FEAT_MORE)) || \
     ((ZCAVE[Y][X].feat >= FEAT_SHOP_HEAD) && \
      (ZCAVE[Y][X].feat <= FEAT_SHOP_TAIL)) || \
     ((ZCAVE[Y][X].feat >= FEAT_HOME_HEAD) && \
      (ZCAVE[Y][X].feat <= FEAT_HOME_TAIL))) 
#else
#define cave_perma_bold(DEPTH,Y,X) \
    ((cave[DEPTH][Y][X].feat >= FEAT_PERM_EXTRA) || \
     ((cave[DEPTH][Y][X].feat == FEAT_LESS) || \
      (cave[DEPTH][Y][X].feat == FEAT_MORE)) || \
     ((cave[DEPTH][Y][X].feat >= FEAT_SHOP_HEAD) && \
      (cave[DEPTH][Y][X].feat <= FEAT_SHOP_TAIL)) || \
     ((cave[DEPTH][Y][X].feat >= FEAT_HOME_HEAD) && \
      (cave[DEPTH][Y][X].feat <= FEAT_HOME_TAIL))) 
#endif

/*
 * Is a given location "valid" for placing things?
 *
 * Permanent grids are never "valid" (see above).
 *
 * Hack -- a grid with an artifact in it is never valid.
 *
 * This function is often "combined" with "cave_floor_bold(Y,X)"
 * or one of the other similar macros above.
 *
 * Line 1 -- forbid perma-grids
 * Line 2-3 -- forbid grids containing artifacts
 * Line 4 -- forbit house doors
 */
#ifdef NEW_DUNGEON
#define cave_valid_bold(ZCAVE,Y,X) \
    (!cave_perma_bold(ZCAVE,Y,X) && \
     (!ZCAVE[Y][X].o_idx || \
      !artifact_p(&o_list[ZCAVE[Y][X].o_idx])))
#else
#define cave_valid_bold(DEPTH,Y,X) \
    (!cave_perma_bold(DEPTH,Y,X) && \
     (!cave[DEPTH][Y][X].o_idx || \
      !artifact_p(&o_list[cave[DEPTH][Y][X].o_idx])))
#endif



/*
 * Grid based version of "cave_floor_bold()"
 */
#define cave_floor_grid(C) \
    (!((C)->feat & 0x20))


/*
 * Grid based version of "cave_clean_bold()"
 */
#define cave_clean_grid(C) \
    (((C)->feat >= FEAT_FLOOR) && \
     ((C)->feat <= FEAT_DIRT) && \
     (!(C)->o_idx))

/*
 * Grid based version of "cave_empty_bold()"
 */
#define cave_empty_grid(C) \
    (cave_floor_grid(C) && \
     !((C)->m_idx))

/*
 * Grid based version of "cave_empty_bold()"
 */
#define cave_naked_grid(C) \
    (((C)->feat >= FEAT_FLOOR) && \
     ((C)->feat <= FEAT_DIRT) && \
     !((C)->o_idx) && \
     !((C)->m_idx))


/*
 * Grid based version of "cave_perma_bold()"
 */
#define cave_perma_grid(C) \
    (((C)->feat >= FEAT_PERM_EXTRA) || \
     (((C)->feat == FEAT_LESS) || \
      ((C)->feat == FEAT_MORE)) || \
     (((C)->feat >= FEAT_SHOP_HEAD) && \
      ((C)->feat <= FEAT_SHOP_TAIL)))


/*
 * Grid based version of "cave_valid_bold()"
 */
#define cave_valid_grid(C) \
    (!cave_perma_grid(C) && \
     (!(C)->o_idx || \
      !artifact_p(&o_list[(C)->o_idx])))



/*
 * Determine if a "legal" grid is within "los" of the player
 *
 * Note the use of comparison to zero to force a "boolean" result
 */
#define player_has_los_bold(IND,Y,X) \
    ((Players[IND]->cave_flag[Y][X] & CAVE_VIEW) != 0)




/*
 * Hack -- Prepare to use the "Secure" routines
 */
#if defined(SET_UID) && defined(SECURE)
extern int PlayerUID;
# define getuid() PlayerUID
# define geteuid() PlayerUID
#endif



/*** Color constants ***/


/*
 * Angband "attributes" (with symbols, and base (R,G,B) codes)
 *
 * The "(R,G,B)" codes are given in "fourths" of the "maximal" value,
 * and should "gamma corrected" on most (non-Macintosh) machines.
 */
#define TERM_DARK		0	/* 'd' */	/* 0,0,0 */
#define TERM_WHITE		1	/* 'w' */	/* 4,4,4 */
#define TERM_SLATE		2	/* 's' */	/* 2,2,2 */
#define TERM_ORANGE		3	/* 'o' */	/* 4,2,0 */
#define TERM_RED		4	/* 'r' */	/* 3,0,0 */
#define TERM_GREEN		5	/* 'g' */	/* 0,2,1 */
#define TERM_BLUE		6	/* 'b' */	/* 0,0,4 */
#define TERM_UMBER		7	/* 'u' */	/* 2,1,0 */
#define TERM_L_DARK		8	/* 'D' */	/* 1,1,1 */
#define TERM_L_WHITE	9	/* 'W' */	/* 3,3,3 */
#define TERM_VIOLET		10	/* 'v' */	/* 4,0,4 */
#define TERM_YELLOW		11	/* 'y' */	/* 4,4,0 */
#define TERM_L_RED		12	/* 'R' */	/* 4,0,0 */
#define TERM_L_GREEN	13	/* 'G' */	/* 0,4,0 */
#define TERM_L_BLUE		14	/* 'B' */	/* 0,4,4 */
#define TERM_L_UMBER	15	/* 'U' */	/* 3,2,1 */


/*** Sound constants ***/


/*
 * Mega-Hack -- some primitive sound support (see "main-win.c")
 *
 * Some "sound" constants for "Term_xtra(TERM_XTRA_SOUND, val)"
 */
#define SOUND_HIT	1
#define SOUND_MISS	2
#define SOUND_FLEE	3
#define SOUND_DROP	4
#define SOUND_KILL	5
#define SOUND_LEVEL	6
#define SOUND_DEATH	7

/*
 * Mega-Hack -- maximum known sounds
 */
#define SOUND_MAX	8


/*** Hack ***/


/*
 * Hack -- attempt to reduce various values
 */
#ifdef ANGBAND_LITE
# undef MACRO_MAX
# define MACRO_MAX	128
# undef QUARK_MAX
# define QUARK_MAX	128
# undef MESSAGE_MAX
# define MESSAGE_MAX	128
# undef MESSAGE_BUF
# define MESSAGE_BUF	4096
#endif



/*
 * Ghost spell "realm"
 */
#define GHOST_SPELLS	7


/* Kings/Queens abilities */
#define KING_OWN	0

/* Bows branding */
#define BOW_BRAND_ELEC          0
#define BOW_BRAND_COLD          1
#define BOW_BRAND_FIRE          2
#define BOW_BRAND_ACID          3
#define BOW_BRAND_POIS          4
#define BOW_BRAND_MANA          5
#define BOW_BRAND_CONF          6
#define BOW_BRAND_SHARP         7
#define BOW_BRAND_BALL_FIRE     8
#define BOW_BRAND_BALL_COLD     9
#define BOW_BRAND_BALL_ELEC     10
#define BOW_BRAND_BALL_ACID     11
#define BOW_BRAND_BALL_SOUND    12


/* Diff mode */
#define MODE_NORMAL 0
#define MODE_HELL 1

/* Monk martial arts... */
# define MAX_MA 17
# define MA_KNEE 1
# define MA_SLOW 2

/* Mental links */
#define LINK_NONE 0
#define LINK_DOMINANT 1
#define LINK_DOMINATED 2

#define LINKF_VIEW      0x0001 /* Share view */
#define LINKF_MOV       0x0002 /* Share movments */
#define LINKF_PAIN      0x0004 /* Share hp & xp */
#define LINKF_OBJ       0x0008 /* Share obj things */
#define LINKF_MISC      0x0010 /* Share misc things */
#define LINKF_OPEN      0x0020 /* Mind Open */

/* Monster gaining levels */
#define MONSTER_LEVEL_MAX       500
#define MONSTER_EXP(level)      ((((level) > MONSTER_LEVEL_MAX)?MONSTER_LEVEL_MAX:(level)) * (((level) > MONSTER_LEVEL_MAX)?MONSTER_LEVEL_MAX:(level)) * (((level) > MONSTER_LEVEL_MAX)?MONSTER_LEVEL_MAX:(level)) * 9)
/* R_INFO is obsolete; use race_inf instead.	- Jir -	*/
#define R_INFO(m_ptr)           (r_info_get(m_ptr))

/*
 * Golem defines
 */
#define GOLEM_NONE      0x00
#define GOLEM_ATTACK    0x01
#define GOLEM_FOLLOW    0x02
#define GOLEM_GUARD     0x04

/*
 * Utility
 */
#define BITS(x)  (1 << (x))

/* Ego monsters defines from PernA	- Jir - */
#define MEGO_CHAR_ANY           127
#define MEGO_ADD                0
#define MEGO_SUB                1
#define MEGO_FIX                2
#define MEGO_PRC                3

#define MEGO_CHANCE             18      /* % chances of getting ego monsters */

/* pfft */
/* #define race_inf(m_ptr) (race_info_idx((m_ptr)->r_idx, (m_ptr)->ego, (m_ptr)->name3))
 */
#define race_inf(m_ptr) r_info_get(m_ptr)

/* wpos to old-fashioned wilderness 'height' */
/* #define wild_idx(p_ptr) (p_ptr->wpos.wx+p_ptr->wpos.wy*MAX_WILD_X); */
/* #define wild_idx(wpos) ((wpos).wx + (wpos).wy * MAX_WILD_X); */

/*
 * traps ported from PernAngband...
 * Hats off to the precedent coders!	- Jir -
 */
/* jk */
#define FTRAP_CHEST      0x000000001 /* may appear on chests */
#define FTRAP_DOOR       0x000000002 /* may appear on doors/floors */
#define FTRAP_FLOOR      0x000000004 /* may appear on floor */
#define FTRAP_CHANGE     0x000000008 /* Color changing */
#define FTRAP_XXX5       0x000000010
#define FTRAP_XXX6       0x000000020
#define FTRAP_XXX7       0x000000040
#define FTRAP_XXX8       0x000000080
#define FTRAP_XXX9       0x000000100
#define FTRAP_XXX10      0x000000200
#define FTRAP_XXX11      0x000000400
#define FTRAP_XXX12      0x000000800
#define FTRAP_XXX13      0x000001000
#define FTRAP_XXX14      0x000002000
#define FTRAP_XXX15      0x000004000
#define FTRAP_XXX16      0x000008000
#define FTRAP_LEVEL1     0x000010000 /* low level ball/bolt trap */
#define FTRAP_LEVEL2     0x000020000 /* medium level ball/bolt trap */
#define FTRAP_LEVEL3     0x000040000 /* high level ball/bolt trap */
#define FTRAP_LEVEL4     0x000080000 /* oops level ball/bolt trap */
#define FTRAP_XXX21      0x000100000
#define FTRAP_XXX22      0x000200000
#define FTRAP_XXX23      0x000400000
#define FTRAP_XXX24      0x000800000
#define FTRAP_XXX25      0x001000000
#define FTRAP_XXX26      0x002000000
#define FTRAP_XXX27      0x004000000
#define FTRAP_XXX28      0x008000000
#define FTRAP_XXX29      0x010000000
#define FTRAP_XXX30      0x020000000
#define FTRAP_XXX31      0x040000000
#define FTRAP_XXX32      0x080000000

/* jk */
#define STAT_DEC_TEMPORARY 1
#define STAT_DEC_NORMAL 2
#define STAT_DEC_PERMANENT 3

/* jk - which trap is which number */
#define TRAP_OF_WEAKNESS_I                  1
#define TRAP_OF_WEAKNESS_II                 2
#define TRAP_OF_WEAKNESS_III                3
#define TRAP_OF_INTELLIGENCE_I              4
#define TRAP_OF_INTELLIGENCE_II             5
#define TRAP_OF_INTELLIGENCE_III            6
#define TRAP_OF_WISDOM_I                    7
#define TRAP_OF_WISDOM_II                   8
#define TRAP_OF_WISDOM_III                  9
#define TRAP_OF_FUMBLING_I                 10
#define TRAP_OF_FUMBLING_II                11
#define TRAP_OF_FUMBLING_III               12
#define TRAP_OF_WASTING_I                  13
#define TRAP_OF_WASTING_II                 14
#define TRAP_OF_WASTING_III                15
#define TRAP_OF_BEAUTY_I                   16
#define TRAP_OF_BEAUTY_II                  17
#define TRAP_OF_BEAUTY_III                 18

#define TRAP_OF_CURSE_WEAPON               20
#define TRAP_OF_CURSE_ARMOR                21
#define TRAP_OF_EARTHQUAKE                 22
#define TRAP_OF_POISON_NEEDLE              23
#define TRAP_OF_SUMMON_MONSTER             24
#define TRAP_OF_SUMMON_UNDEAD              25
#define TRAP_OF_SUMMON_GREATER_UNDEAD      26
#define TRAP_OF_TELEPORT                   27
#define TRAP_OF_PARALYZING                 28
#define TRAP_OF_EXPLOSIVE_DEVICE           29
#define TRAP_OF_TELEPORT_AWAY              30
#define TRAP_OF_LOSE_MEMORY                31
#define TRAP_OF_BITTER_REGRET              32
#define TRAP_OF_BOWEL_CRAMPS               33
#define TRAP_OF_BLINDNESS_CONFUSION        34
#define TRAP_OF_AGGRAVATION                35
#define TRAP_OF_MULTIPLICATION             36
#define TRAP_OF_STEAL_ITEM                 37
#define TRAP_OF_SUMMON_FAST_QUYLTHULGS     38
#define TRAP_OF_SINKING                    39
#define TRAP_OF_MANA_DRAIN                 40
#define TRAP_OF_MISSING_MONEY              41
#define TRAP_OF_NO_RETURN                  42
#define TRAP_OF_SILENT_SWITCHING           43
#define TRAP_OF_WALLS                      44
#define TRAP_OF_CALLING_OUT                45
#define TRAP_OF_SLIDING                    46
#define TRAP_OF_CHARGES_DRAIN              47
#define TRAP_OF_STAIR_MOVEMENT             48
#define TRAP_OF_NEW                        49
#define TRAP_OF_SCATTER_ITEMS              50
#define TRAP_OF_DECAY                      51
#define TRAP_OF_WASTING_WANDS              52
#define TRAP_OF_FILLING                    53
#define TRAP_OF_DRAIN_SPEED                54

#define TRAP_OF_ELEC_BOLT                  60
#define TRAP_OF_POIS_BOLT                  61
#define TRAP_OF_ACID_BOLT                  62
#define TRAP_OF_COLD_BOLT                  63
#define TRAP_OF_FIRE_BOLT                  64
#define TRAP_OF_PLASMA_BOLT                65
#define TRAP_OF_WATER_BOLT                 66
#define TRAP_OF_LITE_BOLT                  67
#define TRAP_OF_DARK_BOLT                  68
#define TRAP_OF_SHARDS_BOLT                69
#define TRAP_OF_SOUND_BOLT                 70
#define TRAP_OF_CONFUSION_BOLT             71
#define TRAP_OF_FORCE_BOLT                 72
#define TRAP_OF_INERTIA_BOLT               73
#define TRAP_OF_MANA_BOLT                  74
#define TRAP_OF_ICE_BOLT                   75
#define TRAP_OF_CHAOS_BOLT                 76
#define TRAP_OF_NETHER_BOLT                77
#define TRAP_OF_DISENCHANT_BOLT            78
#define TRAP_OF_NEXUS_BOLT                 79
#define TRAP_OF_TIME_BOLT                  80
#define TRAP_OF_GRAVITY_BOLT               81

#define TRAP_OF_ELEC_BALL                  82
#define TRAP_OF_POIS_BALL                  83
#define TRAP_OF_ACID_BALL                  84
#define TRAP_OF_COLD_BALL                  85
#define TRAP_OF_FIRE_BALL                  86
#define TRAP_OF_PLASMA_BALL                87
#define TRAP_OF_WATER_BALL                 88
#define TRAP_OF_LITE_BALL                  89
#define TRAP_OF_DARK_BALL                  90
#define TRAP_OF_SHARDS_BALL                91
#define TRAP_OF_SOUND_BALL                 92
#define TRAP_OF_CONFUSION_BALL             93
#define TRAP_OF_FORCE_BALL                 94
#define TRAP_OF_INERTIA_BALL               95
#define TRAP_OF_MANA_BALL                  96
#define TRAP_OF_ICE_BALL                   97
#define TRAP_OF_CHAOS_BALL                 98
#define TRAP_OF_NETHER_BALL                99
#define TRAP_OF_DISENCHANT_BALL           100
#define TRAP_OF_NEXUS_BALL                101
#define TRAP_OF_TIME_BALL                 102
#define TRAP_OF_GRAVITY_BALL              103

#define TRAP_OF_ARROW_I                   110
#define TRAP_OF_ARROW_II                  111
#define TRAP_OF_ARROW_III                 112
#define TRAP_OF_ARROW_IV                  113
#define TRAP_OF_POISON_ARROW_I            114
#define TRAP_OF_POISON_ARROW_II           115
#define TRAP_OF_POISON_ARROW_III          116
#define TRAP_OF_POISON_ARROW_IV           117
#define TRAP_OF_DAGGER_I                  118
#define TRAP_OF_DAGGER_II                 119
#define TRAP_OF_POISON_DAGGER_I           120
#define TRAP_OF_POISON_DAGGER_II          121
#define TRAP_OF_ARROWS_I                  122
#define TRAP_OF_ARROWS_II                 123
#define TRAP_OF_ARROWS_III                124
#define TRAP_OF_ARROWS_IV                 125
#define TRAP_OF_POISON_ARROWS_I           126
#define TRAP_OF_POISON_ARROWS_II          127
#define TRAP_OF_POISON_ARROWS_III         128
#define TRAP_OF_POISON_ARROWS_IV          129
#define TRAP_OF_DAGGERS_I                 130
#define TRAP_OF_DAGGERS_II                131
#define TRAP_OF_POISON_DAGGERS_I          132
#define TRAP_OF_POISON_DAGGERS_II         133

#define TRAP_OF_DROP_ITEMS                140
#define TRAP_OF_DROP_ALL_ITEMS            141
#define TRAP_OF_DROP_EVERYTHING           142

/* -SC- */
#define TRAP_OF_FEMINITY                  150
#define TRAP_OF_MASCULINITY               151
#define TRAP_OF_NEUTRALITY                152
#define TRAP_OF_AGING                     153
#define TRAP_OF_GROWING                   154
#define TRAP_OF_SHRINKING                 155
#define TRAP_OF_ELDRITCH_HORROR           156
#define TRAP_OF_TANKER_DRAIN              157
#define TRAP_OF_DIVINE_ANGER              158
#define TRAP_OF_DIVINE_WRATH              159
#define TRAP_OF_HALLUCINATION             160

#define TRAP_OF_ROCKET                    161
#define TRAP_OF_NUKE_BOLT                 162
#define TRAP_OF_DEATH_RAY                 163
#define TRAP_OF_HOLY_FIRE                 164
#define TRAP_OF_HELL_FIRE                 165
#define TRAP_OF_PSI_BOLT                  166
#define TRAP_OF_PSI_DRAIN                 167
#define TRAP_OF_NUKE_BALL                 168
#define TRAP_OF_PSI_BALL                  169

/* DG */
#define TRAP_OF_ACQUIREMENT               170

/* Jir */
#define TRAP_OF_ALE			171
#define TRAP_OF_GARBAGE		172
#define TRAP_OF_HOSTILITY	173
#define TRAP_OF_CUISINE		174
#define TRAP_OF_UNMAGIC		175
#define TRAP_OF_VERMIN		176
#define TRAP_OF_RANDOM_EFFECT	177
#define TRAP_OF_AMNESIA		178
#define TRAP_OF_SILLINESS	179
#define TRAP_OF_GOODBYE_CHARLIE	180
#define TRAP_OF_PRESENT_EXCHANGE	181
#define TRAP_OF_GARBAGE_FILLING		182
#define TRAP_OF_CHASM		183
#define TRAP_OF_PIT			184

#define TR_LIST(c_ptr) (c_ptr->special.ptr)

#define TRUE_ARTS(o_ptr) ((artifact_p(o_ptr)) && (!o_ptr->name3))
#define PRICE_BOOST(value, base, step) \
			(value > base ? value << ((value - base)/step) : value )	

